{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{134,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаСсылки",
{1,0},
{1,1,
{"ru","Группа ссылки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2},3,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{124,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияАдресДоСтраницыСкачивания",
{1,2,
{"ru","Модули синхронизации"},
{"uk","Модулі синхронізації"}
},
{1,0},1,0,0,2,2,
{3,3,
{-46}
},
{7,2,2,
{-31},140,1,100},
{0,0,0},1,
{5,1,0,3,0,
{1,11707a99-4eb9-4373-bc8c-84891483a034,"Декорация1Нажатие",1,0,11707a99-4eb9-4373-bc8c-84891483a034,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{125,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияАдресДоСтраницыСкачиванияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,2,
{"ru","Модули синхронизации"},
{"uk","Модулі синхронізації"}
},0},0,1,
{12,
{126,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияАдресДоСтраницыСкачиванияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{131,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Декорация1",
{1,0},
{1,0},1,5,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{132,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"Декорация1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,0},0},0,1,
{12,
{133,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Декорация1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{121,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Документация",
{1,2,
{"ru","Документация"},
{"uk","Документація"}
},
{1,0},1,0,0,2,2,
{3,3,
{-46}
},
{7,2,2,
{-31},140,1,100},
{0,0,0},1,
{5,1,0,3,0,
{1,11707a99-4eb9-4373-bc8c-84891483a034,"ДокументацияНажатие",1,0,11707a99-4eb9-4373-bc8c-84891483a034,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{122,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДокументацияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,2,
{"ru","Документация"},
{"uk","Документація"}
},0},0,1,
{12,
{123,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДокументацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},1,0,1,
{12,
{135,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСсылкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,2,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{99,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ГруппаСтраницы",
{1,2,
{"ru","Группа страницы"},
{"uk","Група сторінки"}
},
{1,1,
{"ru","Группа страницы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{3,0,
{0,1,0},2,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{101,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницаЕстьМодуль",
{1,1,
{"ru","Страница есть модуль"}
},
{1,1,
{"ru","Страница есть модуль"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0},7,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{74,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ОбщаяГруппаВерсий",
{1,1,
{"ru","Общая группа версий"}
},
{1,1,
{"ru","Общая группа версий"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,3,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{76,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаИнфоВерсий",
{1,1,
{"ru","Группа инфо версий"}
},
{1,1,
{"ru","Группа инфо версий"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,0,0,1,0,
{3,4,
{0}
},0,2,0,0},2,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ТекущаяВерсияИнфо",
{1,2,
{"ru","Текущая версия модуля:"},
{"uk","Поточна версія модуля:"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,2,2,
{-31},140,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{79,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяВерсияИнфоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,2,
{1,
{1,2,
{"ru","Текущая версия модуля:"},
{"uk","Поточна версія модуля:"}
},0},0,1,
{12,
{80,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяВерсияИнфоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{81,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"НоваяВерсияИнфо",
{1,2,
{"ru","Новая версия модуля:"},
{"uk","Нова версія модуля:"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,2,2,
{-31},140,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{82,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"НоваяВерсияИнфоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,2,
{1,
{1,2,
{"ru","Новая версия модуля:"},
{"uk","Нова версія модуля:"}
},0},0,1,
{12,
{83,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НоваяВерсияИнфоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},1,0,1,
{12,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИнфоВерсийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{84,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаВерсий",
{1,1,
{"ru","Группа версий"}
},
{1,1,
{"ru","Группа версий"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,0,0,1,0,
{3,4,
{0}
},0,2,0,0},2,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{86,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ТекущаяВерсия",
{1,2,
{"ru","0.0.0.0"},
{"uk","0.0.0.0"}
},
{1,0},1,0,0,2,2,
{3,3,
{-14}
},
{7,2,2,
{-31},140,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{87,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяВерсияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,2,
{1,
{1,2,
{"ru","0.0.0.0"},
{"uk","0.0.0.0"}
},0},0,1,
{12,
{88,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяВерсияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{89,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"НоваяВерсия",
{1,2,
{"ru","0.0.0.0"},
{"uk","0.0.0.0"}
},
{1,0},1,0,0,2,2,
{3,3,
{-14}
},
{7,2,2,
{-31},140,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{90,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"НоваяВерсияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,2,
{1,
{1,2,
{"ru","0.0.0.0"},
{"uk","0.0.0.0"}
},0},0,1,
{12,
{91,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НоваяВерсияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},1,0,1,
{12,
{85,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВерсийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{75,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОбщаяГруппаВерсийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{92,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаУстановка",
{1,1,
{"ru","Группа установка"}
},
{1,1,
{"ru","Группа установка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},5,0,3,3,2,0,1,1,
{3,4,
{0}
},0,2,0,3},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{94,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"УстановитьМодуль",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,1,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{95,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УстановитьМодульРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{96,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Декорация2",
{1,2,
{"ru","Должен быть запущент только один сеанс к базе 1С (монопольный запуск)"},
{"uk","Повинен бути запущений тількі один сеанс до бази 1С (монопольний запуск)"}
},
{1,0},1,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{97,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"Декорация2КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,2,
{"ru","Должен быть запущент только один сеанс к базе 1С (монопольный запуск)"},
{"uk","Повинен бути запущений тількі один сеанс до бази 1С (монопольний запуск)"}
},0},0,1,
{12,
{98,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Декорация2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,0,3,3,0,0},1,0,1,
{12,
{93,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаУстановкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{136,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияУстановка",
{1,2,
{"ru","Перед установкой модуля необходимо сделать бэкап базы 1С"},
{"uk","Перед встановленням модуля необхідно зробити бекап бази 1С"}
},
{1,0},1,60,0,2,2,
{3,3,
{-16}
},
{7,2,60,
{-31},700,0,0,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{137,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияУстановкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,2,
{"ru","Перед установкой модуля необходимо сделать бэкап базы 1С"},
{"uk","Перед встановленням модуля необхідно зробити бекап бази 1С"}
},0},0,1,
{12,
{138,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияУстановкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,0,0,3,3,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{127,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаПереносДанных",
{1,1,
{"ru","Перенос данных со старых версий"}
},
{1,1,
{"ru","Группа перенос данных"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},1,0,1,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},1,2,0,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{129,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ПереносДанных",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{130,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПереносДанныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},1,0,1,
{12,
{128,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПереносДанныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{118,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ИнфоОЗапретеУстановки",
{1,2,
{"ru","Инфо о запрете установки"},
{"uk","Інфо про заборону встановлення"}
},
{1,0},1,0,0,2,2,
{3,3,
{-16}
},
{7,2,2,
{-31},120,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{119,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИнфоОЗапретеУстановкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,2,
{1,
{1,2,
{"ru","Инфо о запрете установки"},
{"uk","Інфо про заборону встановлення"}
},0},0,1,
{12,
{120,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИнфоОЗапретеУстановкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{71,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ИнфоВажноВерсии",
{1,2,
{"ru","Инфо важно версии"},
{"uk","Інфо важливо версії"}
},
{1,0},1,0,0,1,2,
{3,3,
{-3}
},
{7,2,60,
{-31},700,0,0,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{72,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИнфоВажноВерсииКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,2,
{"ru","Инфо важно версии"},
{"uk","Інфо важливо версії"}
},0},0,1,
{12,
{73,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИнфоВажноВерсииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,0,3,3,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаНовыеВерсии",
{1,1,
{"ru","Пропущенные версии модулей"}
},
{1,1,
{"ru","Группа новые версии"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,0,3,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},"УставливаемыеМодули",0,0,1,
{1,0},
{1,0},
{1,
{15}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,2,13,
{"U"},19,
{"S",""},
{0,1,0},
{16,0ae4bea5-23be-42a7-b69e-97b11b29c453,2bbe4e12-06d2-409b-a972-eea585125d83,37740564-9e86-44a0-bea9-3f485a5a3f91,44ad3ec9-f3c2-4913-9224-5f9fb6418743,49602716-fea6-497f-8047-726404038857,51c99108-107c-43e1-8918-e48835bf2495,58b2a785-23f6-4b0e-a324-9a1323285595,88078230-1f6b-415f-99e4-ad2ff73810cf,8af6ebff-cd02-4bfe-a984-44a292623708,8d772f97-c0ef-47c0-9cb0-efea28c61341,9ef79140-3de6-436a-8dda-610bb963f5db,b0016a68-ec64-4e6d-b905-c71fd62efc4c,b41f5bbc-ba5d-4888-8cd1-db246a371418,c0519548-2a9a-44de-a25e-faf01e089d4d,e7216412-03ac-4a81-99c2-1d7c28e88e31,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{22,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"УставливаемыеМодулиКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3,0},6,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"УставливаемыеМодулиВерсияМодуля",1,0,
{1,0},
{1,0},
{2,
{15},
{1}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},10,0,0,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиВерсияМодуляКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиВерсияМодуляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"УставливаемыеМодулиСсылка",1,0,
{1,0},
{1,0},
{2,
{15},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{55,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиСсылкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиСсылкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"УставливаемыеМодулиДатаВыхода",1,0,
{1,0},
{1,0},
{2,
{15},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{58,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиДатаВыходаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{59,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиДатаВыходаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"УставливаемыеМодулиКритическаяИнформация",1,0,
{1,0},
{1,0},
{2,
{15},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиКритическаяИнформацияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиКритическаяИнформацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"УставливаемыеМодулиИсторияИзменений",1,0,
{1,0},
{1,0},
{2,
{15},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,5,2,1,1,2,1,1,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},0,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиИсторияИзмененийКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиИсторияИзмененийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{66,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"УставливаемыеМодулиРелизКонфигурации",1,0,
{1,0},
{1,0},
{2,
{15},
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{67,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиРелизКонфигурацииКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиРелизКонфигурацииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{38,0},0,3,3,0},1,
{5,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"УставливаемыеМодулиСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{38,1},0,3,3,0},1,
{5,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"УставливаемыеМодулиУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"УставливаемыеМодулиУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УставливаемыеМодулиУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{38,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНовыеВерсииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{102,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаЕстьМодульРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{103,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницаНетМодуля",
{1,1,
{"ru","Страница нет модуля"}
},
{1,1,
{"ru","Страница нет модуля"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0},2,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{108,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияНетМодуляИнфо1",
{1,2,
{"ru","Для вашей конфигурации 1С нет модуля синхронизации с Битрикс24

Увидеть список поддерживаемых конфигураций 1С, а также скачать модуль синхронизации для адаптации, можно на странице https://1c.1c-bitrix.ru/intranet/download.php"},
{"uk","Для вашої конфігурації 1С нема модуля синхронізації з Бітрікс24

Побачити список підтримуваних конфігурацій 1С, а також завантажити модуль синхронізації для адаптації, можна на сторінці https://1c.1c-bitrix.ru/intranet/download.php"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{109,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияНетМодуляИнфо1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,2,
{"ru","<fontsize 18>Для вашей конфигурации 1С нет модуля синхронизации с Битрикс24</>

<fontsize 14>Увидеть список поддерживаемых конфигураций 1С, а также скачать модуль синхронизации для адаптации, можно на странице </><link https://1c.1c-bitrix.ru/intranet/download.php><fontsize 14>https://1c.1c-bitrix.ru/intranet/download.php</></>"},
{"uk","<fontsize 18>Для вашої конфігурації 1С нема модуля синхронізації з Бітрікс24</>

<fontsize 14>Побачити список підтримуваних конфігурацій 1С, а також завантажити модуль синхронізації для адаптації, можна на сторінці </><link https://1c.1c-bitrix.ru/intranet/download.php><fontsize 14>https://1c.1c-bitrix.ru/intranet/download.php</></>"}
},1},0,1,
{12,
{110,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияНетМодуляИнфо1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,85,0,1,0,3,3,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{116,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаНетМодуля",
{1,2,
{"ru","Группа нет модуля"},
{"uk","Група нема модуля"}
},
{1,1,
{"ru","Группа нет модуля"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,3,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2},2,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{111,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияНетМодуляИнфо2",
{1,2,
{"ru","Если для вашей конфигурации 1С нет модуля синхронизации - напишите нам. "},
{"uk","Якщо для вашої конфігурації 1С немає модуля синхронізації - напишіть нам. "}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{112,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияНетМодуляИнфо2КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,2,
{"ru","<fontsize 14>Если для вашей конфигурации 1С нет модуля синхронизации - напишите нам. </>"},
{"uk","<fontsize 14>Якщо для вашої конфігурації 1С немає модуля синхронізації - напишіть нам. </>"}
},1},0,1,
{12,
{113,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияНетМодуляИнфо2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,70,0,1,0,3,3,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{30,
{114,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"КомандаДобавитьПожелание",
{1,2,
{"ru","Написать"},
{"uk","Написати"}
},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{115,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаДобавитьПожеланиеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},1,0,1,
{12,
{117,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНетМодуляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{104,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаНетМодуляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{100,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСтраницыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
#Область СобытияФормы 

&НаСервере
Процедура ПолучитьСлужебныеДанныеДляСинхронизации()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	СлужебныеДанные = Новый Структура;
	СлужебныеДанные.Вставить(""ВерсияПлатформы1С""			, СистемнаяИнформация.ВерсияПриложения);
	СлужебныеДанные.Вставить(""НазваниеПрикладногоРешения""	, Метаданные.Синоним);
	СлужебныеДанные.Вставить(""ИмяПрикладногоРешения""		, Метаданные.Имя);
	СлужебныеДанные.Вставить(""ВерсияПрикладногоРешения""		, Метаданные.Версия);
	СлужебныеДанные.Вставить(""ХешСумма""						, """");	
	
	Если Метаданные.Справочники.Найти(""Б24_Синхр_НастройкиСинхронизацииСБитрикс24"") <> Неопределено тогда
		СлужебныеДанные.Вставить(""ВерсияМодуляСинхронизации"", Справочники.Б24_Синхр_НастройкиСинхронизацииСБитрикс24.Версия());
		СлужебныеДанные.Вставить(""МодульПервогоПоколения""	, Ложь);	
		
		НайденныеРасширения = РасширенияКонфигурации.Получить(Новый Структура(""Имя"", ""СинхронизацияСБитрикс24""));
		Если НайденныеРасширения.Количество() > 0 тогда
			СлужебныеДанные.ХешСумма = НайденныеРасширения[0].ХешСумма;	
		КонецЕсли;
		
	ИначеЕсли Метаданные.Справочники.Найти(""Б24_НастройкиСинхронизацииСБитрикс24"") <> Неопределено тогда
		СлужебныеДанные.Вставить(""ВерсияМодуляСинхронизации"", Справочники.Б24_НастройкиСинхронизацииСБитрикс24.Версия());
		СлужебныеДанные.Вставить(""МодульПервогоПоколения""	, Ложь);	
		
	ИначеЕсли Метаданные.Обработки.Найти(""Б24_НастройкаОбменаСПорталом"") <> Неопределено тогда
		СлужебныеДанные.Вставить(""ВерсияМодуляСинхронизации"", Обработки.Б24_НастройкаОбменаСПорталом.Версия());
		СлужебныеДанные.Вставить(""МодульПервогоПоколения""	, Истина);	
	Иначе
		СлужебныеДанные.Вставить(""ВерсияМодуляСинхронизации"", ""0.0.0.0"");
		СлужебныеДанные.Вставить(""МодульПервогоПоколения""	, Истина);	
	КонецЕсли;
	
	ДанныеОМодуле = Новый Структура;
	ДанныеОМодуле.Вставить(""ИдПрикладногоРешения""		, ""1C_Syn"");
	ДанныеОМодуле.Вставить(""ЭтоРасширение"" 				, Ложь);
	ДанныеОМодуле.Вставить(""МинимальныйРелиз"" 			, """");
	ДанныеОМодуле.Вставить(""МодульНеОпределен"" 			, Ложь);
	ДанныеОМодуле.Вставить(""СсылкаНаУстановленныйМодуль"", """");
	ДанныеОМодуле.Вставить(""МодульДоработан"" 			, Ложь);
	ДанныеОМодуле.Вставить(""ИдСтраны"" 					, """");
	ДанныеОМодуле.Вставить(""ИдМодуля"" 					, """");
	
	Если СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеНебольшойФирмой"" ИЛИ СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеНебольшойФирмой_CRM"" тогда
		ИдСтраны 		= ""RU"";
		ИдМодуля 		= ""UNF_16"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеТорговлей"" тогда
		ИдСтраны 		= ""RU"";
		Если СлужебныеДанные.НазваниеПрикладногоРешения = ""Управление торговлей, редакция 10.3"" тогда
			ИдМодуля 		= ""UT_10"";
		Иначе
			ИдМодуля 		= ""UT_11"";
			ДанныеОМодуле.ЭтоРасширение = Истина;
		КонецЕсли;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""БухгалтерияПредприятия"" ИЛИ СлужебныеДанные.ИмяПрикладногоРешения = ""БухгалтерияПредприятияКОРП"" тогда
		ИдСтраны 		= ""RU"";
		ИдМодуля 		= ""BP_3"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""КомплекснаяАвтоматизация"" тогда
		ИдСтраны 		= ""RU"";
		
		Если СлужебныеДанные.НазваниеПрикладногоРешения = ""Комплексная автоматизация, редакция 1.1"" тогда
			ИдМодуля 		= ""UT_10"";
			ДанныеОМодуле.МинимальныйРелиз = """";
		Иначе
			ИдМодуля 		= ""UT_11"";
			ДанныеОМодуле.МинимальныйРелиз = ""2.4.6.1"";
			ДанныеОМодуле.ЭтоРасширение = Истина;
		КонецЕсли;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеПроизводственнымПредприятием"" тогда
		ИдСтраны 		= ""RU"";
		ИдМодуля 		= ""UT_10"";
		ДанныеОМодуле.МинимальныйРелиз = """";
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеПредприятием"" тогда
		ИдСтраны 		= ""RU"";
		ИдМодуля 		= ""UT_11"";
		ДанныеОМодуле.МинимальныйРелиз = ""2.4.6.1"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеТорговлей_CRM_2"" тогда
		ИдСтраны 		= ""RU"";
		ИдМодуля 		= ""UT_11"";
		ДанныеОМодуле.МинимальныйРелиз = ""3.0.14.1"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
		
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеНебольшойФирмойДляБеларуси"" тогда
		ИдСтраны 		= ""BY"";
		ИдМодуля 		= ""UNF_16"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеТорговлейДляБеларуси"" тогда
		ИдСтраны 		= ""BY"";
		ИдМодуля 		= ""UT_3"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""БухгалтерияДляБеларуси"" тогда
		ИдСтраны 		= ""BY"";
		ИдМодуля 		= ""BP_2"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеТорговлейДляКазахстана"" тогда
		ИдСтраны 		= ""KZ"";
		ИдМодуля 		= ""UT_3"";
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеТорговымПредприятиемДляКазахстана"" тогда
		ИдСтраны 		= ""KZ"";
		ИдМодуля 		= ""UTP_2"";
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""БухгалтерияДляКазахстана"" тогда
		ИдСтраны 		= ""KZ"";
		ИдМодуля 		= ""BP_3"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеНебольшойФирмойДляУкраины"" тогда
		ИдСтраны = ""UA"";
		ИдМодуля = ""UNF_16"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""УправлениеТорговлейДляУкраины"" тогда
		ИдСтраны = ""UA"";
		Если СлужебныеДанные.НазваниеПрикладногоРешения = ""Управление торговлей для Украины, редакция 2.3"" тогда
			ИдМодуля 		= ""UT_23"";
		Иначе
			ИдМодуля 		= ""UT_3"";
		КонецЕсли;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""БухгалтерияДляУкраины"" тогда
		ИдСтраны = ""UA"";
		ИдМодуля = ""BP_2""; 
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""BASSmallBusiness"" тогда
		ИдСтраны = ""UA"";
		ИдМодуля = ""BASSB"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""BASУправлениеТорговлей"" тогда
		ИдСтраны = ""UA"";
		ИдМодуля = ""UTBAS_3"";
		ДанныеОМодуле.ЭтоРасширение = Истина;
	ИначеЕсли СлужебныеДанные.ИмяПрикладногоРешения = ""BASКомплексноеУправлениеПредприятием"" Тогда
		ИдСтраны = ""UA"";
		ИдМодуля = ""BASIEM"";
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
//////////////////////////////////////////////////////////////////////////////////////////////////////////////		
	Иначе
		ИдСтраны = ""RU"";
		ИдМодуля = ""UT_11"";
		ДанныеОМодуле.МодульНеОпределен = Истина;
	КонецЕсли;
	
	ДанныеОМодуле.ИдСтраны = ИдСтраны;
	ДанныеОМодуле.ИдМодуля = ИдМодуля;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПолучитьСлужебныеДанныеДляСинхронизации();	
	
	ИнформацияОМодулях = ПолучитьИнформациюОМодулях();
	
	Если ИнформацияОМодулях = Неопределено тогда
		Возврат;
	КонецЕсли;

	Если Лев(СлужебныеДанные.ВерсияМодуляСинхронизации,1)= ""1"" тогда      
		СлужебныеДанные.ВерсияМодуляСинхронизации = СлужебныеДанные.ВерсияМодуляСинхронизации + "".0.0"";
	КонецЕсли;
	
	Для каждого ТекМодуль из ИнформацияОМодулях Цикл
		
		ВерсияМодуля = ТекМодуль.Получить(""VersionModule"");
		ВерсияМодуля = СокрЛП(СтрЗаменить(ВерсияМодуля, ""BETA"",""""));
		
		Если ДанныеОМодуле.ИдСтраны = ""UA"" тогда
			СсылкаНаМодуль = ""https://1c.1c-bitrix.ru/""+Строка(ТекМодуль.Получить(""ModuleFile""));
		Иначе
			СсылкаНаМодуль = ""https://1c.1c-bitrix.ru/""+Строка(ТекМодуль.Получить(""ModuleFile""));
		КонецЕсли;
		
		Если Лев(ВерсияМодуля,1)= ""1"" тогда      
			ВерсияМодуля = ВерсияМодуля + "".0.0"";
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СлужебныеДанные.ВерсияМодуляСинхронизации, ВерсияМодуля) > 0 тогда
			Продолжить;	
		ИначеЕсли ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СлужебныеДанные.ВерсияМодуляСинхронизации, ВерсияМодуля) = 0 тогда
			
			Если Не ЗначениеЗаполнено(ДанныеОМодуле.СсылкаНаУстановленныйМодуль) тогда
				ДанныеОМодуле.СсылкаНаУстановленныйМодуль	= СсылкаНаМодуль;
			КонецЕсли;
			
			Если (Строка(СлужебныеДанные.ХешСумма) <> ТекМодуль.Получить(""Hash"")) И ЗначениеЗаполнено(Строка(СлужебныеДанные.ХешСумма)) И ЗначениеЗаполнено(ТекМодуль.Получить(""Hash"")) тогда
				//ДанныеОМодуле.МодульДоработан = Истина;	    - пока не используем
			КонецЕсли;
			
		Иначе
			
			НоваяСтрока = УставливаемыеМодули.Добавить();
			
			НоваяСтрока.ВерсияМодуля			= ВерсияМодуля;
			НоваяСтрока.ДатаВыхода 				= ТекМодуль.Получить(""ReleaseDate"");
			НоваяСтрока.РелизКонфигурации 		= ТекМодуль.Получить(""VersionAppSolution"");
			НоваяСтрока.Ссылка 					= СсылкаНаМодуль;
			
			Если ТекМодуль.Получить(""LOG"") <> Ложь тогда
				НоваяСтрока.ИсторияИзменений 		= ТекМодуль.Получить(""LOG"").Получить(""TEXT"");
			КонецЕсли;
			
			Если ТекМодуль.Получить(""CriticalMessage"") <> Ложь тогда
				НоваяСтрока.КритическаяИнформация 	= ТекМодуль.Получить(""CriticalMessage"").Получить(""TEXT"");
			КонецЕсли;
			
			НоваяСтрока.МинимальныйРелиз 		= ТекМодуль.Получить(""MinimalVersionAppSolution"");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если (Метаданные.РегистрыСведений.Найти(""Б24_ИдентификаторыОбъектов"") <> Неопределено И Метаданные.РегистрыСведений.Найти(""Б24_Синхр_ИдентификаторыОбъектов"") <> Неопределено)
		ИЛИ (Метаданные.РегистрыСведений.Найти(""Б24_ИдентификаторыОбъектов"") <> Неопределено И ДанныеОМодуле.ИдСтраны <> ""RU"" И Лев(СлужебныеДанные.ВерсияМодуляСинхронизации, 1) = ""2"") тогда
		
		Если Метаданные.Константы.Найти(""Б_ОбщиеНастройки"") <> Неопределено тогда
			Элементы.ПереносДанных.Видимость = Истина;
		Иначе
			Элементы.ПереносДанных.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.ПереносДанных.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ (СлужебныеДанные.ВерсияМодуляСинхронизации = """" ИЛИ СлужебныеДанные.ВерсияМодуляСинхронизации = ""0.0.0.0"") тогда
		Элементы.ТекущаяВерсияИнфо.Видимость 	= Истина;
		Элементы.ТекущаяВерсия.Видимость 		= Истина;
		Элементы.ТекущаяВерсия.Заголовок 		= СлужебныеДанные.ВерсияМодуляСинхронизации;
	КонецЕсли;
	
	Если ДанныеОМодуле.МодульНеОпределен тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНетМодуля;
		Элементы.КомандаДобавитьПожелание.КнопкаПоУмолчанию = Истина;
		
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЕстьМодуль;
		
		КоличествоУстанавливаемыхМодулей = УставливаемыеМодули.Количество(); 
		
		Если КоличествоУстанавливаемыхМодулей > 0 тогда
			
			Если ЗначениеЗаполнено(ДанныеОМодуле.МинимальныйРелиз) тогда
				Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ДанныеОМодуле.МинимальныйРелиз, СлужебныеДанные.ВерсияПрикладногоРешения)>0 тогда
					
					Элементы.ИнфоОЗапретеУстановки.Видимость = Истина;
					// БВ
					ТекстСообщения = Нстр(""ru = 'Не рекомендуется устанавливать модуль синхронизации, т.к. релиз конфигурации меньше требуемой.|Требуется не ниже:'"" +
										 "";uk = 'Не рекомендовано встановлювати модулі синхронізації, так як реліз конфігурації менше потрібної.|Потрібен не нище:'"");
					Элементы.ИнфоОЗапретеУстановки.Заголовок = ТекстСообщения + ДанныеОМодуле.МинимальныйРелиз;
					//
					
					//Элементы.ГруппаУстановка.Доступность = Ложь;	
				КонецЕсли;
			Иначе
				Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(УставливаемыеМодули[0].МинимальныйРелиз, СлужебныеДанные.ВерсияПрикладногоРешения)>0 тогда
					
					Элементы.ИнфоОЗапретеУстановки.Видимость = Истина;
					// БВ
					ТекстСообщения = Нстр(""ru = 'Не рекомендуется устанавливать модуль синхронизации, т.к. релиз конфигурации меньше требуемой.|Требуется не ниже:'"" +
										 "";uk = 'Не рекомендовано встановлювати модулі синхронізації, так як реліз конфігурації менше потрібної.|Потрібен не нище:'"");
					Элементы.ИнфоОЗапретеУстановки.Заголовок = ТекстСообщения + УставливаемыеМодули[0].МинимальныйРелиз;
					//
					
					//Элементы.ГруппаУстановка.Доступность = Ложь;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.УставливаемыеМодули.Видимость = НЕ КоличествоУстанавливаемыхМодулей = 0;
		
		Если ЗначениеЗаполнено(ДанныеОМодуле.СсылкаНаУстановленныйМодуль) тогда 
			
			Если КоличествоУстанавливаемыхМодулей = 0 тогда
				Элементы.НоваяВерсияИнфо.Видимость 	= Истина;
				Элементы.НоваяВерсия.Видимость 		= Истина;
				Элементы.НоваяВерсия.Заголовок 		= СлужебныеДанные.ВерсияМодуляСинхронизации;
				Элементы.ИнфоВажноВерсии.Видимость 	= Ложь;
				
				Если ДанныеОМодуле.ЭтоРасширение тогда 
					// БВ
					Элементы.УстановитьМодуль.Заголовок = НСтр(""ru = 'Переустановить модуль';uk = 'Перевстановити модуль'"");
					//
				Иначе
					// БВ
					Элементы.УстановитьМодуль.Заголовок = НСтр(""ru = 'Заново скачать модуль';uk = 'Знову завантажити модуль'"");
					//
					Элементы.Декорация2.Видимость = Ложь;
				КонецЕсли;
				
			Иначе
				Элементы.НоваяВерсияИнфо.Видимость 	= Истина;
				Элементы.НоваяВерсия.Видимость 		= Истина;
				Элементы.НоваяВерсия.Заголовок 		= УставливаемыеМодули[0].ВерсияМодуля;
				
				Элементы.ИнфоВажноВерсии.Видимость 	= Истина;
				Элементы.ИнфоВажноВерсии.Заголовок 	= УставливаемыеМодули[0].КритическаяИнформация;
				
				Если ДанныеОМодуле.ЭтоРасширение тогда
					// БВ
					Элементы.УстановитьМодуль.Заголовок = Нстр(""ru = 'Установить новую версию модуля'; uk = 'Встановити нову версію модуля'"");
					//
				Иначе
					// БВ
					Элементы.УстановитьМодуль.Заголовок = Нстр(""ru = 'Скачать новую версию модуля'; uk = 'Завантажити нову версыю модуля'"");
					//
					Элементы.Декорация2.Видимость = Ложь;
				КонецЕсли;
				
			КонецЕсли;
		Иначе
			Если КоличествоУстанавливаемыхМодулей > 0 тогда
				Элементы.НоваяВерсияИнфо.Видимость 	= Истина;
				Элементы.НоваяВерсия.Видимость 		= Истина;
				Элементы.НоваяВерсия.Заголовок 		= УставливаемыеМодули[0].ВерсияМодуля;
				
				Элементы.ИнфоВажноВерсии.Видимость 	= Истина;
				Элементы.ИнфоВажноВерсии.Заголовок 	= УставливаемыеМодули[0].КритическаяИнформация;
			Иначе
				Элементы.ГруппаУстановка.Видимость = Ложь;
				// БВ
				Элементы.ИнфоВажноВерсии.Заголовок = Нстр(""ru = 'Обновление не требуется'; uk = 'Оновлення не треба'"");
				//
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область Служебные

&НаСервере
Функция ПолучитьИнформациюОМодулях()
	
	Результат = Неопределено;
	
	НастройкиПодключения = Новый Структура;
	РазобратьАдресСайта(""https://util.1c-bitrix.ru/onec/modules_info.php"", НастройкиПодключения);	
	
	Соединение = УстановитьСоединениеССервером(НастройкиПодключения);
	
	ПустойПараметр = ""&LastParam=last"";    //1С может резать символы, поэтому добавляем параметр, который можно спокойно резать.
	
	HTTPЗапрос = Новый HTTPЗапрос;
	HTTPЗапрос.АдресРесурса = ""onec/modules_info.php"";
	
	ТелоHTTPЗапроса = ""q=1&module=""+ДанныеОМодуле.ИдПрикладногоРешения+""&country=""+ДанныеОМодуле.ИдСтраны+""&app=""+ДанныеОМодуле.ИдМодуля+ ПустойПараметр;	
	
	//module - IdModule (символьный код раздела 1 уровня),
	//country - IdCountry (символьный код раздела 2 уровня),
	//app - IdAppSolution (символьный код раздела 2 уровня).	
	
	
	HTTPЗапрос.Заголовки.Вставить(""Content-Type""	,""application/x-www-form-urlencoded; charset=utf-8"");
	HTTPЗапрос.Заголовки.Вставить(""Content-Length""	, Формат(СтрДлина(ТелоHTTPЗапроса), ""ЧГ=0""));
	
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоHTTPЗапроса);
	
	Попытка   
		
		Ответ 				= Соединение.ОтправитьДляОбработки(HTTPЗапрос);	
		ОтветСтрокой 		= Ответ.ПолучитьТелоКакСтроку();
		Раскодировка 		= РаскодироватьJSON(ОтветСтрокой);
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ОтветСтрокой);
		
		ИнформацияОМодулях =  ПрочитатьJSON(ЧтениеJSON, Истина);
		
		Результат = ИнформацияОМодулях.Получить(""result"").Получить(""modules"");
		
	Исключение
		Сообщить(ИнформацияОбОшибке().Описание);
	КонецПопытки;
	
	Возврат Результат; 
	
КонецФункции

&НаСервере
Функция РазобратьАдресСайта(Знач АдресСайта, НастройкиПодключения) 
	
	АдресСайта = СокрЛП(АдресСайта); 
	
	Сервер		 		 = """"; 
	Порт				 = 0;
	АдресСкрипта 		 = """";
	ЗащищенноеСоединение = Ложь;
	
	Если НЕ ПустаяСтрока(АдресСайта) Тогда
		
		АдресСайта = СтрЗаменить(АдресСайта, ""\"", ""/"");
		АдресСайта = СтрЗаменить(АдресСайта, "" "", """");
		
		Если НРег(Лев(АдресСайта, 7)) = ""http://"" Тогда
			
			АдресСайта = Сред(АдресСайта, 8);
			
		ИначеЕсли НРег(Лев(АдресСайта, 8)) = ""https://"" Тогда
			
			АдресСайта = Сред(АдресСайта, 9);
			ЗащищенноеСоединение = Истина;
			
		КонецЕсли;
		
		ПозицияСлэша = Найти(АдресСайта, ""/"");
		
		Если ПозицияСлэша > 0 Тогда
			
			Сервер 		 = Лев(АдресСайта, ПозицияСлэша - 1);	
			АдресСкрипта = Прав(АдресСайта, СтрДлина(АдресСайта) - ПозицияСлэша);
			
		Иначе
			
			Сервер 		 = АдресСайта;
			АдресСкрипта = """";
			
		КонецЕсли;
		
		ПозицияДвоеточия = Найти(Сервер, "":"");
		ПортСтрока = ""0"";
		
		Если ПозицияДвоеточия > 0 Тогда
			
			СерверСПортом = Сервер;
			Сервер		  = Лев(СерверСПортом, ПозицияДвоеточия - 1);
			ПортСтрока 	  = Прав(СерверСПортом, СтрДлина(СерверСПортом) - ПозицияДвоеточия);
			
		КонецЕсли;
		
		Попытка
			
			Порт = Число(ПортСтрока);
			
		Исключение
			
			#ЕСЛИ НЕ СЕРВЕР ТОГДА
				// БВ
				ПоказатьОповещениеПользователя(НСтр(""ru = 'Не удалось получить номер порта ('; uk = 'Не вдалося отримати номер порту ('"") + ПортСтрока + "")!""
				+ Символы.ПС + НСтр(""ru = 'Проверьте правильность ввода адреса сайта.'; uk = 'Перевірте правильність введення адреси сайту.'""));
				//

			#ИНАЧЕ
				// БВ
				Сообщить(НСтр(""ru = 'Не удалось получить номер порта ('; uk = 'Не вдалося отримати номер порту ('"") + ПортСтрока + "")!""
				+ Символы.ПС + НСтр(""ru = 'Проверьте правильность ввода адреса сайта.'; uk = 'Перевірте правильність введення адреси сайту.'""));
				//
			#КОНЕЦЕСЛИ
			
			Возврат Ложь;
			
		КонецПопытки;
		
		Если Порт = 0 Тогда
			
			Порт = ?(ЗащищенноеСоединение, 443, 80);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НастройкиПодключения.Вставить(""Сервер""	  				, Сервер); 
	НастройкиПодключения.Вставить(""Порт""		   			, Порт);
	НастройкиПодключения.Вставить(""АдресСкрипта""			, АдресСкрипта);
	НастройкиПодключения.Вставить(""ЗащищенноеСоединение""	, ЗащищенноеСоединение);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция РаскодироватьJSON(URL)
	
	Результат = URL; 
	
	СписокСимволов = Новый СписокЗначений;
	СписокСимволов.Добавить(""\u0430"", ""а"");
	СписокСимволов.Добавить(""\u0431"", ""б"");
	СписокСимволов.Добавить(""\u0432"", ""в"");
	СписокСимволов.Добавить(""\u0433"", ""г"");
	СписокСимволов.Добавить(""\u0434"", ""д"");
	СписокСимволов.Добавить(""\u0435"", ""е"");
	СписокСимволов.Добавить(""\u0451"", ""ё"");
	СписокСимволов.Добавить(""\u0436"", ""ж"");
	СписокСимволов.Добавить(""\u0437"", ""з"");
	СписокСимволов.Добавить(""\u0438"", ""и"");
	СписокСимволов.Добавить(""\u0439"", ""й"");
	СписокСимволов.Добавить(""\u043a"", ""к"");
	СписокСимволов.Добавить(""\u043b"", ""л"");
	СписокСимволов.Добавить(""\u043c"", ""м"");
	СписокСимволов.Добавить(""\u043d"", ""н"");
	СписокСимволов.Добавить(""\u043e"", ""о"");
	СписокСимволов.Добавить(""\u043f"", ""п"");
	СписокСимволов.Добавить(""\u0440"", ""р"");
	СписокСимволов.Добавить(""\u0441"", ""с"");
	СписокСимволов.Добавить(""\u0442"", ""т"");
	СписокСимволов.Добавить(""\u0443"", ""у"");
	СписокСимволов.Добавить(""\u0444"", ""ф"");
	СписокСимволов.Добавить(""\u0445"", ""х"");
	СписокСимволов.Добавить(""\u0446"", ""ц"");
	СписокСимволов.Добавить(""\u0447"", ""ч"");
	СписокСимволов.Добавить(""\u0448"", ""ш"");
	СписокСимволов.Добавить(""\u0448"", ""щ"");
	СписокСимволов.Добавить(""\u044a"", ""ъ"");
	СписокСимволов.Добавить(""\u044b"", ""ы"");
	СписокСимволов.Добавить(""\u044c"", ""ь"");
	СписокСимволов.Добавить(""\u044d"", ""э"");
	СписокСимволов.Добавить(""\u044e"", ""ю"");
	СписокСимволов.Добавить(""\u044f"", ""я"");
	
	СписокСимволов.Добавить(""\u0410"", ""А"");
	СписокСимволов.Добавить(""\u0411"", ""Б"");
	СписокСимволов.Добавить(""\u0412"", ""В"");
	СписокСимволов.Добавить(""\u0413"", ""Г"");
	СписокСимволов.Добавить(""\u0414"", ""Д"");
	СписокСимволов.Добавить(""\u0415"", ""Е"");
	СписокСимволов.Добавить(""\u0401"", ""Ё"");
	СписокСимволов.Добавить(""\u0416"", ""Ж"");
	СписокСимволов.Добавить(""\u0417"", ""З"");
	СписокСимволов.Добавить(""\u0418"", ""И"");
	СписокСимволов.Добавить(""\u0419"", ""Й"");
	СписокСимволов.Добавить(""\u041a"", ""К"");
	СписокСимволов.Добавить(""\u041b"", ""Л"");
	СписокСимволов.Добавить(""\u041c"", ""М"");
	СписокСимволов.Добавить(""\u041d"", ""Н"");
	СписокСимволов.Добавить(""\u041e"", ""О"");
	СписокСимволов.Добавить(""\u041f"", ""П"");
	СписокСимволов.Добавить(""\u0420"", ""Р"");
	СписокСимволов.Добавить(""\u0421"", ""С"");
	СписокСимволов.Добавить(""\u0422"", ""Т"");
	СписокСимволов.Добавить(""\u0423"", ""У"");
	СписокСимволов.Добавить(""\u0424"", ""Ф"");
	СписокСимволов.Добавить(""\u0425"", ""Х"");
	СписокСимволов.Добавить(""\u0426"", ""Ц"");
	СписокСимволов.Добавить(""\u0427"", ""Ч"");
	СписокСимволов.Добавить(""\u0428"", ""Ш"");
	СписокСимволов.Добавить(""\u0428"", ""Щ"");
	СписокСимволов.Добавить(""\u042a"", ""Ъ"");
	СписокСимволов.Добавить(""\u042b"", ""Ы"");
	СписокСимволов.Добавить(""\u042c"", ""Ь"");
	СписокСимволов.Добавить(""\u042d"", ""Э"");
	СписокСимволов.Добавить(""\u042e"", ""Ю"");
	СписокСимволов.Добавить(""\u042f"", ""Я"");
	
	
	СписокСимволов.Добавить(""\u0022"", ""'"");
	
	СписокСимволов.Добавить(""\u003E"", "">"");
	СписокСимволов.Добавить(""\u003е"", "">"");
	
	СписокСимволов.Добавить(""\u003C"", ""<"");
	СписокСимволов.Добавить(""\u003c"", ""<"");
	
	Для Каждого текЭлемент из СписокСимволов Цикл
		
		Результат = СтрЗаменить(Результат,текЭлемент.Значение, текЭлемент.Представление);	
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЗакодироватьСтрокуСервер(ЗначениеСтроки) Экспорт
	
	Возврат КодироватьСтроку(XMLСтрока(ЗначениеСтроки), СпособКодированияСтроки.КодировкаURL, ""UTF8"");
	
КонецФункции

&НаСервере
Функция УстановитьСоединениеССервером(ОбщиеНастройки)    
	
	Соединение = Неопределено;
	
	Попытка
		
		ssl = Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Неопределено);   
		
		ИнтернетПрокси = ПолучениеФайловИзИнтернетаКлиентСервер.ПолучитьПрокси(""HTTP"");
		
		Соединение = Новый HTTPСоединение(ОбщиеНастройки.Сервер, ОбщиеНастройки.Порт,,, ИнтернетПрокси, ,ssl);
		
	Исключение
		// БВ
		лТекстОшибки = НСтр(""ru = 'Не удалось установить соединение с серовером'; uk = 'Не вдалося встановити зв'язок з сервером'"") 
		+ ОбщиеНастройки.Сервер + "":"" + Строка(ОбщиеНастройки.Порт) 
		+ НСтр(""ru = '.Проверьте правильность токена.'; uk = '.Перевірте правильність токену.'"");
		//
		Сообщить(лТекстОшибки);
		
		Соединение = Неопределено;
		
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

#КонецОбласти


#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ДокументацияНажатие(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		// БВ
		ПоказатьПредупреждение(,НСтр(""ru = 'Для данной операции необходимо установить расширение работы с файлами!'"" +
		"";uk = 'Для даної операції необхідно встановити розширення роботи з файлами!'""));
		//
		Возврат;
	КонецЕсли;
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения(""ДокументацияНажатиеЗавершение"",ЭтотОбъект), ""https://helpdesk.bitrix24.ru/open/7544349"");
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументацияНажатиеЗавершение(Данные,ДополнительныеПараметры) Экспорт
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		// БВ
		ПоказатьПредупреждение(,НСтр(""ru = 'Для данной операции необходимо установить расширение работы с файлами!'"" + 
									"";uk = 'Для даної операції необхідно встановити розширення роботи з файлами!'""));
		//
		Возврат;
	КонецЕсли;
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения(""ДокументацияНажатиеЗавершение"",ЭтотОбъект), ""https://1c.1c-bitrix.ru/intranet/download.php"");
	
КонецПроцедуры



#КонецОбласти


#Область КомандыФормы

&НаКлиенте
Процедура УстановитьМодуль(Команда)
	
	Если ДанныеОМодуле.ЭтоРасширение тогда
	
		Если ДанныеОМодуле.МодульДоработан И ЗначениеЗаполнено(ДанныеОМодуле.СсылкаНаУстановленныйМодуль) тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Оповещение = Новый ОписаниеОповещения(""ПослеЗакрытияВопросаОЗатиранииИзменени"", ЭтаФорма, Параметры);
			// БВ
			ПоказатьВопрос(Оповещение, Нстр(""ru = 'Есть вероятность, что ваш модуль был модифицирован. Вы точно хотите обновить модуль?'"" + 
										   "";uk = 'Є можливість, що ваш модуль був модифікований. Ви точно бажаєте оновити модуль?'""), Режим, 0);
			//
		Иначе
			СкачатьУстановитьМодуль();
			
			Если РасширениеУстановлено = Истина тогда
				Оповещение = Новый ОписаниеОповещения(""ПослеЗакрытияВопросаОПерезапуске"", ЭтаФорма, Параметры);
				// БВ
				ПоказатьВопрос(Оповещение, Нстр(""ru = 'Модуль синхронизации был установлен. Изменения будут приняты после перезапуска клиента. Перезапустить?'"" +
											   "";uk = 'Модуль синхронізації було встановлено. Зміни будуть прийняті після перезапуску клієнта. Перезапустити?'""), РежимДиалогаВопрос.ДаНет, 0);
				//	
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		
		// БВ
		Диалог.Заголовок = НСтр(""ru = 'Укажите где будет сохранен модуль синхронизации'; uk = 'Вкажіть де буде збережен модуль синхронізації'"");
		Диалог.ПолноеИмяФайла   = Нстр(""ru = 'Модуль синхронизации с Битрикс24'; uk = 'Модуль синхронізації з Бітрікс24'"");
		//
		Диалог.Фильтр = ""Архив (*.zip)|*.zip"";
		
		Диалог.Показать(Новый ОписаниеОповещения(""СохранитьФайлЗавершение"",ЭтаФорма));
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлЗавершение(МассивФайлов,ДополнительныеПараметры) Экспорт
    Если МассивФайлов<>Неопределено Тогда
        ИмяФайла=МассивФайлов.Получить(0);
		СкачатьУстановитьМодуль(ИмяФайла);
    КонецЕсли;
КонецПроцедуры
		  

&НаКлиенте
Процедура ПослеЗакрытияВопросаОЗатиранииИзменени(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
	
	СкачатьУстановитьМодуль();

	Если РасширениеУстановлено = Истина тогда
		Оповещение = Новый ОписаниеОповещения(""ПослеЗакрытияВопросаОПерезапуске"", ЭтаФорма, Параметры);
		// БВ
		ТекстСообщения = Нстр(""ru = 'Модуль синхронизации был установлен. Изменения будут приняты после перазапуска клиента. Перезапустить?'"" + 
							 "";uk = 'Модуль синхронізації був встановлений. Зміни будуть прийняті після перезапуску клієнта. Перезапустити?'"");
		ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет, 0);
		//
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкачатьУстановитьМодуль(ИмяФайла = Неопределено)
	
	УспешнаяЗагрузка = Истина;
	
	Если УставливаемыеМодули.Количество() = 0 тогда
		СсылкаНаМодуль = ДанныеОМодуле.СсылкаНаУстановленныйМодуль; 
		Версия = СлужебныеДанные.ВерсияМодуляСинхронизации;
	Иначе
		СсылкаНаМодуль = УставливаемыеМодули[0].Ссылка; 
		Версия = УставливаемыеМодули[0].ВерсияМодуля;
	КонецЕсли;
	
	ИмяФайла = ?(ИмяФайла = Неопределено, ПолучитьИмяВременногоФайла(""cfe""), ИмяФайла);
	
	Результат = Неопределено;
	
	НастройкиПодключения = Новый Структура;
	РазобратьАдресСайта(СсылкаНаМодуль, НастройкиПодключения);	
	
	Соединение = УстановитьСоединениеССервером(НастройкиПодключения);
	
	HTTPЗапрос = Новый HTTPЗапрос(НастройкиПодключения.АдресСкрипта);
	
	Попытка   
		Соединение.Получить(HTTPЗапрос, ИмяФайла);
	Исключение
		УспешнаяЗагрузка = Ложь;
		// БВ
		Сообщить(Нстр(""ru = 'Не удалось загрузить модуль по адресу: '; uk = 'Не вдалося завантажити модуль за адресою: '"") + СсылкаНаМодуль);
		//
	КонецПопытки;

	Если УспешнаяЗагрузка тогда
		ОтправкаАналитики(Версия);
	КонецЕсли;
	
	Если ДанныеОМодуле.ЭтоРасширение И УспешнаяЗагрузка тогда
	
		НайденныеРасширения = РасширенияКонфигурации.Получить(Новый Структура(""Имя"", ""СинхронизацияСБитрикс24""));
		Если НайденныеРасширения.Количество() = 0 тогда
			НайденныеРасширения = РасширенияКонфигурации.Получить(Новый Структура(""Имя"", ""СинхронизацияСБитрикс24БП""));
		КонецЕсли;
		Если НайденныеРасширения.Количество() = 0 тогда
			НайденныеРасширения = РасширенияКонфигурации.Получить(Новый Структура(""Имя"", ""СинхронизацияСБитрикс24УНФ""));
		КонецЕсли;
		Если НайденныеРасширения.Количество() = 0 тогда
			НайденныеРасширения = РасширенияКонфигурации.Получить(Новый Структура(""Имя"", ""СинхронизацияСБитрикс24УТ""));
		КонецЕсли;
		
		ОписаниеЗащитыОтОпасныхДействий  = Новый ОписаниеЗащитыОтОпасныхДействий;
		ОписаниеЗащитыОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = Ложь;
		
		Попытка
		
			Если НайденныеРасширения.Количество() = 0 тогда
				
				НовоеРасширение = РасширенияКонфигурации.Создать();
				НовоеРасширение.БезопасныйРежим 		= Ложь;
				НовоеРасширение.Активно 				= Истина;
				НовоеРасширение.ЗащитаОтОпасныхДействий = ОписаниеЗащитыОтОпасныхДействий;
				НовоеРасширение.Записать(Новый ДвоичныеДанные(ИмяФайла));
				
				РасширениеУстановлено = Истина;
			Иначе
				
				СозданноеРасширение = НайденныеРасширения[0];
				СозданноеРасширение.БезопасныйРежим 		= Ложь;
				СозданноеРасширение.Активно 				= Истина;
				СозданноеРасширение.ЗащитаОтОпасныхДействий = ОписаниеЗащитыОтОпасныхДействий;
				СозданноеРасширение.Записать(Новый ДвоичныеДанные(ИмяФайла));
				
				РасширениеУстановлено = Истина;

			КонецЕсли;
		Исключение
			// БВ
			Сообщить(Нстр(""ru = 'Возможно у вас не монопольный доступ к базе 1С';uk = 'Можливо у вас не монопольний доступ до бази 1С'""));
			//
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОПерезапуске(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	ЗавершитьРаботуСистемы(Ложь,Истина)

КонецПроцедуры

&НаСервере
Процедура ОтправкаАналитики(Версия)
	
	Результат = Неопределено;
	
	НастройкиПодключения = Новый Структура;
	РазобратьАдресСайта(""https://util.1c-bitrix.ru/onec/ga_send.php"", НастройкиПодключения);	
	
	Соединение = УстановитьСоединениеССервером(НастройкиПодключения);
	
	ПустойПараметр = ""&LastParam=last"";    //1С может резать символы, поэтому добавляем параметр, который можно спокойно резать.
	
	HTTPЗапрос = Новый HTTPЗапрос;
	HTTPЗапрос.АдресРесурса = НастройкиПодключения.АдресСкрипта;
	
	ТелоHTTPЗапроса = ""q=1&module=""+ЗакодироватьСтрокуСервер(ДанныеОМодуле.ИдСтраны+""_1С:Синхронизация Битрикс24"")
	+""&app=""+ЗакодироватьСтрокуСервер(СлужебныеДанные.НазваниеПрикладногоРешения)+""&version=""+ЗакодироватьСтрокуСервер(Версия)+ ПустойПараметр;	
	
	HTTPЗапрос.Заголовки.Вставить(""Content-Type""	,""application/x-www-form-urlencoded; charset=utf-8"");
	HTTPЗапрос.Заголовки.Вставить(""Content-Length""	, Формат(СтрДлина(ТелоHTTPЗапроса), ""ЧГ=0""));
	
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоHTTPЗапроса);
	
	Попытка   
		
		Ответ 			= Соединение.ОтправитьДляОбработки(HTTPЗапрос);	
		ОтветСтрокой 	= Ответ.ПолучитьТелоКакСтроку();
		
	Исключение
		Сообщить(ИнформацияОбОшибке().Описание);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьПожелание(Команда)
	
	ОткрытьФорму(""ВнешняяОбработка.УниверсальныйУстановщикМодулейСинхронизацииБитрикс24.Форма.ФормаПожеланий"",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
КонецПроцедуры

&НаКлиенте
Процедура ПереносДанных(Команда)
	
	Если ДанныеОМодуле.ЭтоРасширение тогда
		
		ПеренестиДанныеСоСтаройВерсииМодуляНаСервереРасширение();
		
	Иначе
		
		ПеренестиДанныеСоСтаройВерсииМодуляНаСервереКонф();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПеренестиДанныеСоСтаройВерсииМодуляНаСервереРасширение()
		
	НайденныеРасширения = РасширенияКонфигурации.Получить(Новый Структура(""Имя"", ""СинхронизацияСБитрикс24""));
		
	Если НайденныеРасширения.Количество() = 0 тогда
		// БВ
		Сообщить(Нстр(""ru = 'Модуль не установлен'; uk = 'Модуль не встановлено'""));
		//
		Возврат;
	КонецЕсли;
	
	// БВ
	Сообщить(Нстр(""ru = 'Начало переноса данных.'; uk = 'Початок перенесення даних'""));
	//
	
	ОбщиеНастройки 		= Константы.Б_ОбщиеНастройки.Получить().Получить();
	НастройкиКоннектора = Константы.Б24_НастройкиКоннектора.Получить().Получить();
	НастройкиОбмена 	= Константы.Б24_НастройкиОбмена.Получить().Получить();
	
	ЕстьПользовательскоеДеревоГрупп = Ложь;				
	Если Метаданные.ОбщиеМодули.Найти(""Б24_ОбменСПорталомВызовСервера"") <> Неопределено тогда
		Выполнить(""ЕстьПользовательскоеДеревоГрупп = Б24_ОбменСПорталомВызовСервера.ЕстьПользовательскоеДеревоГрупп();"");
	КонецЕсли;
	
	ТипыДанныхДляОбменаСПорталомСтарые = Неопределено;
	Если Метаданные.ОбщиеМодули.Найти(""Б24_ОбменСПорталомСерверПовтИсп"") <> Неопределено тогда
		Выполнить(""ТипыДанныхДляОбменаСПорталомСтарые = Б24_ОбменСПорталомСерверПовтИсп.ПолучитьТипыДанныхДляОбменаСПорталом();"");
	КонецЕсли;
	
	ТипыДанныхДляОбменаСПорталомНовые = Неопределено;
	Если Метаданные.ОбщиеМодули.Найти(""Б24_Синхр_ОбщегоНазначенияПовтИсп"") <> Неопределено тогда
		Выполнить(""ТипыДанныхДляОбменаСПорталомНовые = Б24_Синхр_СинхронизацияПовтИсп.ПолучитьТипыДанныхДляОбменаСПорталом();"");
	КонецЕсли;
	
	Если ТипЗнч(ОбщиеНастройки)= Тип(""Структура"") тогда	
	
		Результат = Новый Структура;
		
		Если ОбщиеНастройки.Свойство(""ОбрезатьИсториюОбменов"") тогда
			Результат.Вставить(""ОбрезатьИсториюОбменов""	 , ОбщиеНастройки.ОбрезатьИсториюОбменов);
		Иначе
			Результат.Вставить(""ОбрезатьИсториюОбменов""	 , Истина);
		КонецЕсли;
		
		Если ОбщиеНастройки.Свойство(""ЧислоДнейХраненияИстории"") тогда
			Результат.Вставить(""ЧислоДнейХраненияИстории""	 , ОбщиеНастройки.ЧислоДнейХраненияИстории);
		Иначе
			Результат.Вставить(""ЧислоДнейХраненияИстории""	 , 7);
		КонецЕсли;
		
		Если ОбщиеНастройки.Свойство(""РежимОтладки"") тогда
			Результат.Вставить(""РежимОтладки""	 , ОбщиеНастройки.РежимОтладки);
		Иначе
			Результат.Вставить(""РежимОтладки""	 , Ложь);
		КонецЕсли;
		
		Попытка
			Выполнить(""Б24_Синхр_ОбщегоНазначенияСервер.УстановитьЗначениеВХранилищаНастроек(""""Логирование"""", Результат);"");
		Исключение
			// БВ
			Сообщить(Нстр(""ru = 'Требуется перезагрузить клиент 1С'; uk = 'Потрібне перезавантаження клієнта 1С'""));
			//
			Возврат;	
		КонецПопытки;
		
	КонецЕсли;	
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип(""Булево""));
	ОписаниеТиповБулево = Новый ОписаниеТипов(МассивТипов);
	
	НоваяНастройка = Справочники.Б24_Синхр_НастройкиСинхронизацииСБитрикс24.СоздатьЭлемент();
	НоваяНастройка.УстановитьНовыйКод();
	НоваяНастройка.Наименование = ""Настройка из модуля версии 1.Х"";
	НоваяНастройка.ПорядокВыполненияСинхронизации = ""Сперва Битрикс24, затем 1С"";
	
	Если ТипЗнч(НастройкиКоннектора)= Тип(""Структура"") тогда	
		Если НастройкиКоннектора.Свойство(""ИдентификаторКоннектора"") тогда
			НоваяНастройка.ИдентификаторИсточника = НастройкиКоннектора.ИдентификаторКоннектора;
		Иначе
			НоваяНастройка.ИдентификаторИсточника = ""OneC"";
		КонецЕсли;
			
		Если НастройкиКоннектора.Свойство(""ТаблицаСопоставленияПользователей"") тогда
			Для Каждого ТекСтрока из НастройкиКоннектора.ТаблицаСопоставленияПользователей Цикл
				НовыйПользователь = НоваяНастройка.СопоставлениеПользователей.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйПользователь, ТекСтрока); 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НоваяНастройка.КоличествоПовторенийПриОшибках = 3;
	//НоваяНастройка.РасписаниеРегламентногоЗадания = Новый ХранилищеЗначения(Новый РасписаниеРегламентногоЗадания);	
	НоваяНастройка.СпособСинхронизацииДанных = ""Только ручной режим"";
		
	НастройкиСинхронизацииПоУмолчанию = Справочники.Б24_Синхр_НастройкиСинхронизацииСБитрикс24.ПолучитьНастройкиСинхронизацииПоУмолчанию();
	
	Если ТипЗнч(НастройкиОбмена)= Тип(""Структура"") тогда	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияКонтрагентов"") тогда
			НоваяНастройка.СинхронизацияКонтрагентов = НастройкиОбмена.СинхронизацияКонтрагентов;
		Иначе
			НоваяНастройка.СинхронизацияКонтрагентов = Истина;
		КонецЕсли;	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияТоваров"") тогда
			НоваяНастройка.СинхронизацияТоваров = НастройкиОбмена.СинхронизацияТоваров;
		Иначе
			НоваяНастройка.СинхронизацияТоваров = Истина;
		КонецЕсли;	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияСчетов"") тогда
			НоваяНастройка.СинхронизацияСчетов = НастройкиОбмена.СинхронизацияСчетов;
		Иначе
			НоваяНастройка.СинхронизацияСчетов = Истина;
		КонецЕсли;	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияСделок"") тогда
			НоваяНастройка.СинхронизацияСделок = НастройкиОбмена.СинхронизацияСделок;
		Иначе
			НоваяНастройка.СинхронизацияСделок = Истина;
		КонецЕсли;	
		
#Область Контрагенты

		Если НастройкиОбмена.Свойство(""НастройиСинхронизацииКонтрагентов"") тогда
			
			НастройиСинхронизацииКонтрагентовСтарые = НастройкиОбмена.НастройиСинхронизацииКонтрагентов;
			НастройиСинхронизацииКонтрагентовНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииКонтрагентов;
			
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ВыгружатьКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ВыгружатьКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ВыгружатьКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ВыгружатьКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ВыгружатьПользовательскиеПоляКомпанийИКонтактов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ВыгружатьПользовательскиеПоляКомпанийИКонтактов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ВыгружатьПользовательскиеПоляКомпанийИКонтактов = НастройиСинхронизацииКонтрагентовСтарые.ВыгружатьПользовательскиеПоляКомпанийИКонтактов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ГруппаДляНовыхКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ГруппаДляНовыхКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ГруппаДляНовыхКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ГруппаДляНовыхКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ЗагружатьКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ЗагружатьКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ЗагружатьКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ЗагружатьКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ЗагружатьПользовательскиеПоляКомпанийИКонтактов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ЗагружатьПользовательскиеПоляКомпанийИКонтактов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ЗагружатьПользовательскиеПоляКомпанийИКонтактов = НастройиСинхронизацииКонтрагентовСтарые.ЗагружатьПользовательскиеПоляКомпанийИКонтактов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ОбновлятьКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ОбновлятьКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ОбновлятьКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ОбновлятьКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ПорядокИдентификацииФизЛиц"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ПорядокИдентификацииФизЛиц"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ПорядокИдентификацииФизЛиц = НастройиСинхронизацииКонтрагентовСтарые.ПорядокИдентификацииФизЛиц;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ПорядокИдентификацииЮрЛиц"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ПорядокИдентификацииЮрЛиц"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ПорядокИдентификацииЮрЛиц = НастройиСинхронизацииКонтрагентовСтарые.ПорядокИдентификацииЮрЛиц;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""Пресеты"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""Пресеты"") тогда
				
				Пресет = НастройиСинхронизацииКонтрагентовСтарые.Пресеты;
				
				Пресет.Колонки.Добавить(""ТипКонтрагента"");
				
				Для Каждого ТекПресет из Пресет Цикл
					ТекПресет.ТипКонтрагента = ТекПресет.ВидКонтрагента;
				КонецЦикла;
				
				НастройиСинхронизацииКонтрагентовНовые.Пресеты = Пресет;
				
			КонецЕсли;
			
		КонецЕсли;	

#КонецОбласти		

		
#Область Товары

		Если НастройкиОбмена.Свойство(""НастройкиСинхронизацииТоваров"") тогда
			
			НастройиСинхронизацииТоваровСтарые 	= НастройкиОбмена.НастройкиСинхронизацииТоваров;
			НастройиСинхронизацииТоваровНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииТоваров;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ЗагружатьТовары"") И НастройиСинхронизацииТоваровНовые.Свойство(""ЗагружатьТовары"") тогда
				НастройиСинхронизацииТоваровНовые.ЗагружатьТовары = НастройиСинхронизацииТоваровСтарые.ЗагружатьТовары;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьТовары"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьТовары"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьТовары = НастройиСинхронизацииТоваровСтарые.ВыгружатьТовары;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ОбновлятьТовары"") И НастройиСинхронизацииТоваровНовые.Свойство(""ОбновлятьТовары"") тогда
				НастройиСинхронизацииТоваровНовые.ОбновлятьТовары = НастройиСинхронизацииТоваровСтарые.ОбновлятьТовары;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ЗагружатьКартинкиИФайлы"") И НастройиСинхронизацииТоваровНовые.Свойство(""ЗагружатьКартинкиИФайлы"") тогда
				НастройиСинхронизацииТоваровНовые.ЗагружатьКартинкиИФайлы = НастройиСинхронизацииТоваровСтарые.ЗагружатьКартинкиИФайлы;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьКартинкиИФайлы"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьКартинкиИФайлы"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьКартинкиИФайлы = НастройиСинхронизацииТоваровСтарые.ВыгружатьКартинкиИФайлы;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьПланируемуюДатуПоступления"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьПланируемуюДатуПоступления"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьПланируемуюДатуПоступления = НастройиСинхронизацииТоваровСтарые.ВыгружатьПланируемуюДатуПоступления;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьШтрихкоды"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьШтрихкоды"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьШтрихкоды = НастройиСинхронизацииТоваровСтарые.ВыгружатьШтрихкоды;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""Склад"") И НастройиСинхронизацииТоваровНовые.Свойство(""Склад"") тогда
				НастройиСинхронизацииТоваровНовые.Склад = НастройиСинхронизацииТоваровСтарые.Склад;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ТипЦены"") И НастройиСинхронизацииТоваровНовые.Свойство(""ТипЦены"") тогда
				НастройиСинхронизацииТоваровНовые.ТипЦены = НастройиСинхронизацииТоваровСтарые.ТипЦены;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""СтавкиНДС"") И НастройиСинхронизацииТоваровНовые.Свойство(""СтавкиНДС"") тогда
				НастройиСинхронизацииТоваровНовые.СтавкиНДС = НастройиСинхронизацииТоваровСтарые.СтавкиНДС;
			КонецЕсли;
			
			
			
			Если Метаданные.ОбщиеМодули.Найти(""Б24_ОбменСПорталомВызовСервера"") <> Неопределено тогда
				
				Если ЕстьПользовательскоеДеревоГрупп тогда
					
					НовоеДеревоГрупп = Справочники.Б24_Синхр_ПользовательскиеГруппыТоваров.СоздатьЭлемент();
					НовоеДеревоГрупп.Товары.Загрузить(Справочники.Б24_ПользовательскиеГруппыТоваров.Б24_Инфоблок.Товары.Выгрузить());
					НовоеДеревоГрупп.Наименование = ""Дерево с предыдущей версии модуля"";
					НовоеДеревоГрупп.Записать();
										
					СоответствиеРодителей = Новый Соответствие;
					СоответствиеРодителей.Вставить(Справочники.Б24_ПользовательскиеГруппыТоваров.Б24_Инфоблок, НовоеДеревоГрупп.Ссылка);
					
					Выборка = Справочники.Б24_ПользовательскиеГруппыТоваров.ВыбратьИерархически(Справочники.Б24_ПользовательскиеГруппыТоваров.Б24_Инфоблок);
					
					Пока Выборка.Следующий() Цикл

						ПодчДеревоГрупп = Справочники.Б24_Синхр_ПользовательскиеГруппыТоваров.СоздатьЭлемент();
						ПодчДеревоГрупп.Товары.Загрузить(Выборка.Товары.Выгрузить());
						ПодчДеревоГрупп.Наименование = Выборка.Наименование;
						
						ПодчДеревоГрупп.Родитель = СоответствиеРодителей[Выборка.Родитель];	
						
						ПодчДеревоГрупп.Записать();
						
						СоответствиеРодителей.Вставить(Выборка.Ссылка, ПодчДеревоГрупп.Ссылка);
						
					КонецЦикла;
					
					Если НастройиСинхронизацииТоваровНовые.Свойство(""ДеревоГрупп"") тогда
						НастройиСинхронизацииТоваровНовые.ДеревоГрупп = НовоеДеревоГрупп.Ссылка;	
					Иначе
						НастройиСинхронизацииТоваровНовые.Вставить(""ДеревоГрупп"", НовоеДеревоГрупп.Ссылка);	
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;	

#КонецОбласти		

		
#Область Сделки

		Если НастройкиОбмена.Свойство(""НастройкиСинхронизацииСделок"") тогда
			
			НастройиСинхронизацииСделокСтарые = НастройкиОбмена.НастройкиСинхронизацииСделок;
			НастройиСинхронизацииСделокНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииСделок;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ЗагружатьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ЗагружатьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ЗагружатьСделки = НастройиСинхронизацииСделокСтарые.ЗагружатьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ВыгружатьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ВыгружатьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ВыгружатьСделки = НастройиСинхронизацииСделокСтарые.ВыгружатьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ЗагружатьПользовательскиеПоляСделок"") И НастройиСинхронизацииСделокНовые.Свойство(""ЗагружатьПользовательскиеПоляСделок"") тогда
				НастройиСинхронизацииСделокНовые.ЗагружатьПользовательскиеПоляСделок = НастройиСинхронизацииСделокСтарые.ЗагружатьПользовательскиеПоляСделок;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ВыгружатьПользовательскиеПоляСделок"") И НастройиСинхронизацииСделокНовые.Свойство(""ВыгружатьПользовательскиеПоляСделок"") тогда
				НастройиСинхронизацииСделокНовые.ВыгружатьПользовательскиеПоляСделок = НастройиСинхронизацииСделокСтарые.ВыгружатьПользовательскиеПоляСделок;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ОбновлятьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ОбновлятьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ОбновлятьСделки = НастройиСинхронизацииСделокСтарые.ОбновлятьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""Организация"") И НастройиСинхронизацииСделокНовые.Свойство(""Организация"") тогда
				НастройиСинхронизацииСделокНовые.Организация = НастройиСинхронизацииСделокСтарые.Организация;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""Подразделение"") И НастройиСинхронизацииСделокНовые.Свойство(""Подразделение"") тогда
				НастройиСинхронизацииСделокНовые.Подразделение = НастройиСинхронизацииСделокСтарые.Подразделение;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""РежимЗаписиДокумента"") И НастройиСинхронизацииСделокНовые.Свойство(""РежимЗаписиДокумента"") тогда
				НастройиСинхронизацииСделокНовые.РежимЗаписиДокумента = НастройиСинхронизацииСделокСтарые.РежимЗаписиДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ИсточникДатыДокумента"") И НастройиСинхронизацииСделокНовые.Свойство(""ИсточникДатыДокумента"") тогда
				НастройиСинхронизацииСделокНовые.ИсточникДатыДокумента = НастройиСинхронизацииСделокСтарые.ИсточникДатыДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ИсточникНомераДокумента"") И НастройиСинхронизацииСделокНовые.Свойство(""ИсточникНомераДокумента"") тогда
				НастройиСинхронизацииСделокНовые.ИсточникНомераДокумента = НастройиСинхронизацииСделокСтарые.ИсточникНомераДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ДатаНачалаВыгрузкиСделок"") И НастройиСинхронизацииСделокНовые.Свойство(""ДатаНачалаВыгрузкиСделок"") тогда
				НастройиСинхронизацииСделокНовые.ДатаНачалаВыгрузкиСделок = НастройиСинхронизацииСделокСтарые.ДатаНачалаВыгрузкиСделок;
				НастройиСинхронизацииСделокНовые.ДатаНачалаЗагрузкиСделок = НастройиСинхронизацииСделокСтарые.ДатаНачалаВыгрузкиСделок;
				
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ВыгружатьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ВыгружатьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ВыгружатьСделки = НастройиСинхронизацииСделокСтарые.ВыгружатьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ИнформацияОСтатусах"") тогда
				
				ИнформацияОСтатусах = НастройиСинхронизацииСделокСтарые.ИнформацияОСтатусах;				
				
				Если ТипЗнч(ИнформацияОСтатусах) = Тип(""Структура"") тогда
					
					ВидЗаказа = Неопределено;
					НастройиСинхронизацииСделокСтарые.Свойство(""ВидЗаказа"", ВидЗаказа);
					
					НаправленияСделок = Новый ТаблицаЗначений;
					НаправленияСделок.Колонки.Добавить(""ИдНаправления"");
					НаправленияСделок.Колонки.Добавить(""Направление"");
					НаправленияСделок.Колонки.Добавить(""ВидЗаказа"");
					
					Если ИнформацияОСтатусах.Свойство(""СтатусыНаправленийЗначенийСвойств"") тогда
						
						ИнформацияОСтатусах.СтатусыНаправленийЗначенийСвойств.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
						ИнформацияОСтатусах.СтатусыНаправленийЗначенийСвойств.Колонки.Добавить(""ВидЗаказа"");
						
						Для Каждого ТекНаправления из ИнформацияОСтатусах.СтатусыНаправленийЗначенийСвойств Цикл
							Если НаправленияСделок.Найти(ТекНаправления.ИдНаправления, ""ИдНаправления"") = Неопределено тогда
								НовоеНаправление = НаправленияСделок.Добавить();
								НовоеНаправление.ИдНаправления 	= ТекНаправления.ИдНаправления;
								НовоеНаправление.Направление 	= ТекНаправления.НазваниеНаправления;
								НовоеНаправление.ВидЗаказа 		= ВидЗаказа;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
					Если ИнформацияОСтатусах.Свойство(""СтатусыНаправленийСостояний"") тогда
						
						ИнформацияОСтатусах.СтатусыНаправленийСостояний.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);
						ИнформацияОСтатусах.СтатусыНаправленийСостояний.Колонки.Добавить(""ВидЗаказа"");
						
						Для Каждого ТекНаправления из ИнформацияОСтатусах.СтатусыНаправленийСостояний Цикл
							Если НаправленияСделок.Найти(ТекНаправления.ИдНаправления, ""ИдНаправления"") = Неопределено тогда
								НовоеНаправление = НаправленияСделок.Добавить();
								НовоеНаправление.ИдНаправления 	= ТекНаправления.ИдНаправления;
								НовоеНаправление.Направление 	= ТекНаправления.НазваниеНаправления;
								НовоеНаправление.ВидЗаказа 		= ВидЗаказа;
							КонецЕсли;
						КонецЦикла;
						
						
					КонецЕсли;
					
					Если ИнформацияОСтатусах.Свойство(""СтатусыНаправленийСтатусов"") тогда
						
						ИнформацияОСтатусах.СтатусыНаправленийСтатусов.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
						ИнформацияОСтатусах.СтатусыНаправленийСтатусов.Колонки.Добавить(""ВидЗаказа"");	
						
						Для Каждого ТекНаправления из ИнформацияОСтатусах.СтатусыНаправленийСтатусов Цикл
							Если НаправленияСделок.Найти(ТекНаправления.ИдНаправления, ""ИдНаправления"") = Неопределено тогда
								НовоеНаправление = НаправленияСделок.Добавить();
								НовоеНаправление.ИдНаправления 	= ТекНаправления.ИдНаправления;
								НовоеНаправление.Направление 	= ТекНаправления.НазваниеНаправления;
								НовоеНаправление.ВидЗаказа 		= ВидЗаказа;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
					ИнформацияОСтатусах.Вставить(""НаправленияСделок"", НаправленияСделок);
					
					Если ИнформацияОСтатусах.Свойство(""НаправленияСделок"") тогда
						ИнформацияОСтатусах.НаправленияСделок = НаправленияСделок;
					Иначе
						ИнформацияОСтатусах.Вставить(""НаправленияСделок"", НаправленияСделок);
					КонецЕсли;
					
				КонецЕсли;
				
				НастройиСинхронизацииСделокНовые.Вставить(""ИнформацияОСтатусах"", ИнформацияОСтатусах);	
				
			КонецЕсли;
			
		КонецЕсли;	

#КонецОбласти		

		
#Область Счета

		Если НастройкиОбмена.Свойство(""НастройкиСинхронизацииСчетов"") тогда
			
			НастройиСинхронизацииСчетовСтарые = НастройкиОбмена.НастройкиСинхронизацииСчетов;
			НастройиСинхронизацииСчетовНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииСчетов;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ВыгружатьПользовательскиеПоляСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ВыгружатьПользовательскиеПоляСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ВыгружатьПользовательскиеПоляСчетов = НастройиСинхронизацииСчетовСтарые.ВыгружатьПользовательскиеПоляСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ЗагружатьПользовательскиеПоляСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ЗагружатьПользовательскиеПоляСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ЗагружатьПользовательскиеПоляСчетов = НастройиСинхронизацииСчетовСтарые.ЗагружатьПользовательскиеПоляСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ВыгружатьСчета"") И НастройиСинхронизацииСчетовНовые.Свойство(""ВыгружатьСчета"") тогда
				НастройиСинхронизацииСчетовНовые.ВыгружатьСчета = НастройиСинхронизацииСчетовСтарые.ВыгружатьСчета;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ЗагружатьСчета"") И НастройиСинхронизацииСчетовНовые.Свойство(""ЗагружатьСчета"") тогда
				НастройиСинхронизацииСчетовНовые.ЗагружатьСчета = НастройиСинхронизацииСчетовСтарые.ЗагружатьСчета;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ДатаНачалаВыгрузкиСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ДатаНачалаВыгрузкиСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ДатаНачалаВыгрузкиСчетов = НастройиСинхронизацииСчетовСтарые.ДатаНачалаВыгрузкиСчетов;
				НастройиСинхронизацииСчетовНовые.ДатаНачалаЗагрузкиСчетов = НастройиСинхронизацииСчетовСтарые.ДатаНачалаВыгрузкиСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ОбновлятьСчета"") И НастройиСинхронизацииСчетовНовые.Свойство(""ОбновлятьСчета"") тогда
				НастройиСинхронизацииСчетовНовые.ОбновлятьСчета = НастройиСинхронизацииСчетовСтарые.ОбновлятьСчета;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""РежимЗаписиДокумента"") И НастройиСинхронизацииСчетовНовые.Свойство(""РежимЗаписиДокумента"") тогда
				НастройиСинхронизацииСчетовНовые.РежимЗаписиДокумента = НастройиСинхронизацииСчетовСтарые.РежимЗаписиДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ИсточникДатыДокумента"") И НастройиСинхронизацииСчетовНовые.Свойство(""ИсточникДатыДокумента"") тогда
				НастройиСинхронизацииСчетовНовые.ИсточникДатыДокумента = НастройиСинхронизацииСчетовСтарые.ИсточникДатыДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ИсточникНомераДокумента"") И НастройиСинхронизацииСчетовНовые.Свойство(""ИсточникНомераДокумента"") тогда
				НастройиСинхронизацииСчетовНовые.ИсточникНомераДокумента = НастройиСинхронизацииСчетовСтарые.ИсточникНомераДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ПечатныеФормыСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ПечатныеФормыСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ПечатныеФормыСчетов = НастройиСинхронизацииСчетовСтарые.ПечатныеФормыСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""Подразделение"") И НастройиСинхронизацииСчетовНовые.Свойство(""Подразделение"") тогда
				НастройиСинхронизацииСчетовНовые.Подразделение = НастройиСинхронизацииСчетовСтарые.Подразделение;
			КонецЕсли;
	
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ИнформацияОСтатусах"") тогда
				
				ИнформацияОСтатусах = НастройиСинхронизацииСчетовСтарые.ИнформацияОСтатусах;				
				
				Если ТипЗнч(ИнформацияОСтатусах) = Тип(""Структура"") тогда
					
					Если ИнформацияОСтатусах.Свойство(""СоответствияЗначенийСвойств"") тогда
						ИнформацияОСтатусах.СоответствияЗначенийСвойств.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
					КонецЕсли;
					
					Если ИнформацияОСтатусах.Свойство(""СоответствияСтатусов"") тогда
						ИнформацияОСтатусах.СоответствияСтатусов.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
					КонецЕсли;
					
				КонецЕсли;
				
				НастройиСинхронизацииСчетовНовые.Вставить(""ИнформацияОСтатусах"", ИнформацияОСтатусах);	
				
			КонецЕсли;
	
		КонецЕсли;	

#КонецОбласти		

	КонецЕсли;
	
	НоваяНастройка.НастройкиСинхронизации = Новый ХранилищеЗначения(НастройкиСинхронизацииПоУмолчанию);
	
	НоваяНастройка.Записать();	
	
	НастройкаСинхронизации = НоваяНастройка.Ссылка;
	
	// БВ
	Сообщить(Нстр(""ru = 'Начало переноса идентификаторов'; uk = 'Початок  перенесення ідентифікаторів'""));
	//
	
	Токен = РегистрыСведений.Б24_ТокеныОбмена.ПолучитьПоследнее();
	НоваяЗапись 						= РегистрыСведений.Б24_Синхр_ТокеныСинхронизации.СоздатьМенеджерЗаписи();
	НоваяЗапись.НастройкаСинхронизации 	= НастройкаСинхронизации;
	НоваяЗапись.Токен					= Токен.Токен;
	НоваяЗапись.Записать();	
	
	
	ОбщиеНастройки = Неопределено;
	Если Метаданные.ОбщиеМодули.Найти(""Б24_Синхр_СинхронизацияКлиентСервер"") <> Неопределено тогда
		Выполнить(""ОбщиеНастройки =  Б24_Синхр_СинхронизацияКлиентСервер.СформироватьБазовуюСтруктуруНастроек(НастройкаСинхронизации);"");
	КонецЕсли;
	
	Если ОбщиеНастройки = Неопределено тогда
		// БВ
		Сообщить(Нстр(""ru = 'Не удалось подключиться к Битрикс24'; uk = 'Не вдалось підключитися до Бітрікс24'""));
		ТекстСообщения = Нстр(""ru = 'Не удалось перенести идентификаторы объектов. Скорее всего в старом модуле некорректный токен.'"" + 
							 "";uk = 'Не вдалось перенести ідентифікатори об'єктів. Скоріш за все в старому модулі некоректний токен.'"");
		Сообщить(ТекстСообщения);
		//
		Возврат;
	КонецЕсли;
	Портал = ОбщиеНастройки.НастройкиПодключения.Сервер;
	
	НоваяНастройка.Портал = Портал;
	НоваяНастройка.Записать();
	
	Выборка = РегистрыСведений.Б24_ИдентификаторыОбъектов.Выбрать();
	
	
	Пока Выборка.Следующий() Цикл
		
		НоваяЗапись = РегистрыСведений.Б24_Синхр_ИдентификаторыОбъектов.СоздатьМенеджерЗаписи();
		
		НоваяЗапись.Портал 						= Портал; 		
		НоваяЗапись.Объект 						= Выборка.Объект;
		НоваяЗапись.Идентификатор 				= Выборка.Идентификатор;
		НоваяЗапись.ДополнительныйИдентификатор = Выборка.ДополнительныйИдентификатор;
		
		Если Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Товар тогда
			
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Товар;
			
			Попытка
				Если ЗначениеЗаполнено(Выборка.ПодчиненныйОбъект) тогда
					НоваяЗапись.ПодчиненныйОбъект 	= Выборка.ПодчиненныйОбъект;
				Иначе
					НоваяЗапись.ПодчиненныйОбъект 	= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.КартинкаФайлТовара тогда
			
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.КартинкаФайлТовара;
				
			Попытка
				Если ЗначениеЗаполнено(Выборка.ПодчиненныйОбъект) тогда
					НоваяЗапись.ПодчиненныйОбъект 	= Выборка.ПодчиненныйОбъект;
				Иначе
					НоваяЗапись.ПодчиненныйОбъект 	= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоТовара тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоТовара;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ГруппаТовара тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ГруппаТовара;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Счет тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Счет;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.РеквизитыСчета тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.РеквизитыСчета;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Компания тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Компания;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Контакт тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Контакт;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Реквизит тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Реквизит;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЮрАдресРеквизита тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЮрАдресРеквизита;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ФактАдресРеквизита тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ФактАдресРеквизита;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.БанковскийСчетРеквизита тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.БанковскийСчетРеквизита;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЕдиницаИзмерения тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЕдиницаИзмерения;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваТовара тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваТовара;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Сделка тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Сделка;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.РеквизитыСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.РеквизитыСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ТоварыСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ТоварыСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоСчета тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоСчета;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоКомпании тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоКомпании;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоКонтакта тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоКонтакта;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваКомпании тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваКомпании;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваКонтакта тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваКонтакта;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваСчета тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваСчета;
		КонецЕсли;		
		
		НоваяЗапись.Записать();	
		
	КонецЦикла;
	// БВ
	Сообщить(Нстр(""ru = 'Перенос идентификаторов завершен'; uk = 'Перенесення ідентифікаторів завершено'""));
	//
	
	НаименованиеОбъекта = ""Выполнение синхронизации с Битрикс24 по расписанию"";
	Публикация 			= Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(""Наименование"", НаименованиеОбъекта);
	Запрос.УстановитьПараметр(""Публикация""	, Публикация);
	Запрос.Текст = ""ВЫБРАТЬ
	|	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
	|ГДЕ
	|	ДополнительныеОтчетыИОбработки.Наименование = &Наименование
	|	И ДополнительныеОтчетыИОбработки.Публикация = &Публикация
	|	И ДополнительныеОтчетыИОбработки.ПометкаУдаления = ЛОЖЬ"";
	
	ВыполненныйЗапрос = Запрос.Выполнить();
	
	ЗаписьСОбработкой = Неопределено;
	
	Если НЕ ВыполненныйЗапрос.Пустой() тогда
		ТзнДанных = ВыполненныйЗапрос.Выгрузить();
		ЗаписьСОбработкой = ТзнДанных[0].Ссылка;
		
		ТекОбработка = ЗаписьСОбработкой.ПолучитьОбъект();
		ТекОбработка.УстановитьПометкуУдаления(Истина);
		ТекОбработка.Записать();
		
	КонецЕсли;
	
	Попытка
		НастройкиОбмена 	= Константы.Б24_НастройкиОбмена.Получить().Получить();
		НастройкиОбмена.СпособСинхронизацииДанных 	= ""Только ручной режим""; 
		НастройкиОбмена.СинхронизацияКонтрагентов 	= Ложь; 
		НастройкиОбмена.СинхронизацияТоваров 		= Ложь; 
		НастройкиОбмена.СинхронизацияСчетов 		= Ложь; 
		НастройкиОбмена.СинхронизацияСделок 		= Ложь; 
		
		Константы.Б24_НастройкиОбмена.Установить(новый ХранилищеЗначения(НастройкиОбмена));
	Исключение
	КонецПопытки;
	
	ОбновитьПовторноИспользуемыеЗначения();
	// БВ
	Сообщить(Нстр(""ru = 'Перенос данных завершен.'; uk = 'Перенесення даних завершено'""));
	//
КонецПроцедуры

Процедура ПеренестиДанныеСоСтаройВерсииМодуляНаСервереКонф()
	
	Если Метаданные.РегистрыСведений.Найти(""Б24_ИдентификаторыОбъектов"")=Неопределено тогда
		// БВ
		Сообщить(Нстр(""ru = 'Модуль не установлен'; uk = 'Модуль не встановлено'""));
		//
		Возврат;
	КонецЕсли;
	
	// БВ
	Сообщить(Нстр(""ru = 'Начало переноса данных.'; uk = 'Початок перенесення даних'""));
	//
	
	ОбщиеНастройки 		= Константы.Б_ОбщиеНастройки.Получить().Получить();
	НастройкиКоннектора = Константы.Б24_НастройкиКоннектора.Получить().Получить();
	НастройкиОбмена 	= Константы.Б24_НастройкиОбмена.Получить().Получить();
	
	ЕстьПользовательскоеДеревоГрупп = Ложь;				
	
	ТипыДанныхДляОбменаСПорталомСтарые = Неопределено;
	Если Метаданные.ОбщиеМодули.Найти(""Б24_СинхронизацияПовтИсп"") <> Неопределено тогда
		Выполнить(""ТипыДанныхДляОбменаСПорталомСтарые = Б24_СинхронизацияПовтИсп.ПолучитьТипыДанныхДляОбменаСПорталом();"");
	КонецЕсли;
	                                              
	ТипыДанныхДляОбменаСПорталомНовые = Неопределено;
	Если Метаданные.ОбщиеМодули.Найти(""Б24_СинхронизацияПовтИсп"") <> Неопределено тогда
		Выполнить(""ТипыДанныхДляОбменаСПорталомНовые = Б24_СинхронизацияПовтИсп.ПолучитьТипыДанныхДляОбменаСПорталом();"");
	КонецЕсли;
	
	Если ТипЗнч(ОбщиеНастройки)= Тип(""Структура"") тогда	
	
		Результат = Новый Структура;
		
		Если ОбщиеНастройки.Свойство(""ОбрезатьИсториюОбменов"") тогда
			Результат.Вставить(""ОбрезатьИсториюОбменов""	 , ОбщиеНастройки.ОбрезатьИсториюОбменов);
		Иначе
			Результат.Вставить(""ОбрезатьИсториюОбменов""	 , Истина);
		КонецЕсли;
		
		Если ОбщиеНастройки.Свойство(""ЧислоДнейХраненияИстории"") тогда
			Результат.Вставить(""ЧислоДнейХраненияИстории""	 , ОбщиеНастройки.ЧислоДнейХраненияИстории);
		Иначе
			Результат.Вставить(""ЧислоДнейХраненияИстории""	 , 7);
		КонецЕсли;
		
		Если ОбщиеНастройки.Свойство(""РежимОтладки"") тогда
			Результат.Вставить(""РежимОтладки""	 , ОбщиеНастройки.РежимОтладки);
		Иначе
			Результат.Вставить(""РежимОтладки""	 , Ложь);
		КонецЕсли;
		
		Попытка
			Выполнить(""Б24_ОбщегоНазначенияСервер.УстановитьЗначениеВХранилищаНастроек(""""Логирование"""", Результат);"");
		Исключение
			// БВ
			Сообщить(Нстр(""ru = 'Требуется перезагрузить клиент 1С'; uk = 'Потрібно перезавантажити клієнт 1С'""));
			//
			Возврат;	
		КонецПопытки;
		
	КонецЕсли;	
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип(""Булево""));
	ОписаниеТиповБулево = Новый ОписаниеТипов(МассивТипов);
	
	НоваяНастройка = Справочники.Б24_НастройкиСинхронизацииСБитрикс24.СоздатьЭлемент();
	НоваяНастройка.УстановитьНовыйКод();
	НоваяНастройка.Наименование = ""Настройка из модуля версии 1.Х"";
	НоваяНастройка.ПорядокВыполненияСинхронизации = ""Сперва Битрикс24, затем 1С"";
	
	
	Если ТипЗнч(НастройкиКоннектора)= Тип(""Структура"") тогда	
		Если НастройкиКоннектора.Свойство(""ИдентификаторКоннектора"") тогда
			НоваяНастройка.ИдентификаторИсточника = НастройкиКоннектора.ИдентификаторКоннектора;
		Иначе
			НоваяНастройка.ИдентификаторИсточника = ""OneC"";
		КонецЕсли;
			
		Если НастройкиКоннектора.Свойство(""ТаблицаСопоставленияПользователей"") тогда
			Для Каждого ТекСтрока из НастройкиКоннектора.ТаблицаСопоставленияПользователей Цикл
				НовыйПользователь = НоваяНастройка.СопоставлениеПользователей.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйПользователь, ТекСтрока); 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НоваяНастройка.КоличествоПовторенийПриОшибках = 3;
	//НоваяНастройка.РасписаниеРегламентногоЗадания = Новый ХранилищеЗначения(Новый РасписаниеРегламентногоЗадания);	
	НоваяНастройка.СпособСинхронизацииДанных = ""Только ручной режим"";
	
	НастройкиСинхронизацииПоУмолчанию = Справочники.Б24_НастройкиСинхронизацииСБитрикс24.ПолучитьНастройкиСинхронизацииПоУмолчанию();
	
	Если ТипЗнч(НастройкиОбмена)= Тип(""Структура"") тогда	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияКонтрагентов"") тогда
			НоваяНастройка.СинхронизацияКонтрагентов = НастройкиОбмена.СинхронизацияКонтрагентов;
		Иначе
			НоваяНастройка.СинхронизацияКонтрагентов = Истина;
		КонецЕсли;	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияТоваров"") тогда
			НоваяНастройка.СинхронизацияТоваров = НастройкиОбмена.СинхронизацияТоваров;
		Иначе
			НоваяНастройка.СинхронизацияТоваров = Истина;
		КонецЕсли;	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияСчетов"") тогда
			НоваяНастройка.СинхронизацияСчетов = НастройкиОбмена.СинхронизацияСчетов;
		Иначе
			НоваяНастройка.СинхронизацияСчетов = Истина;
		КонецЕсли;	
		
		Если НастройкиОбмена.Свойство(""СинхронизацияСделок"") тогда
			НоваяНастройка.СинхронизацияСделок = НастройкиОбмена.СинхронизацияСделок;
		Иначе
			НоваяНастройка.СинхронизацияСделок = Истина;
		КонецЕсли;	
		
		
#Область Контрагенты

		Если НастройкиОбмена.Свойство(""НастройиСинхронизацииКонтрагентов"") тогда
			
			НастройиСинхронизацииКонтрагентовСтарые = НастройкиОбмена.НастройиСинхронизацииКонтрагентов;
			НастройиСинхронизацииКонтрагентовНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииКонтрагентов;
			
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ВыгружатьКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ВыгружатьКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ВыгружатьКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ВыгружатьКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ВыгружатьПользовательскиеПоляКомпанийИКонтактов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ВыгружатьПользовательскиеПоляКомпанийИКонтактов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ВыгружатьПользовательскиеПоляКомпанийИКонтактов = НастройиСинхронизацииКонтрагентовСтарые.ВыгружатьПользовательскиеПоляКомпанийИКонтактов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ГруппаДляНовыхКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ГруппаДляНовыхКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ГруппаДляНовыхКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ГруппаДляНовыхКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ЗагружатьКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ЗагружатьКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ЗагружатьКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ЗагружатьКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ЗагружатьПользовательскиеПоляКомпанийИКонтактов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ЗагружатьПользовательскиеПоляКомпанийИКонтактов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ЗагружатьПользовательскиеПоляКомпанийИКонтактов = НастройиСинхронизацииКонтрагентовСтарые.ЗагружатьПользовательскиеПоляКомпанийИКонтактов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ОбновлятьКонтрагентов"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ОбновлятьКонтрагентов"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ОбновлятьКонтрагентов = НастройиСинхронизацииКонтрагентовСтарые.ОбновлятьКонтрагентов;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ПорядокИдентификацииФизЛиц"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ПорядокИдентификацииФизЛиц"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ПорядокИдентификацииФизЛиц = НастройиСинхронизацииКонтрагентовСтарые.ПорядокИдентификацииФизЛиц;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""ПорядокИдентификацииЮрЛиц"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""ПорядокИдентификацииЮрЛиц"") тогда
				НастройиСинхронизацииКонтрагентовНовые.ПорядокИдентификацииЮрЛиц = НастройиСинхронизацииКонтрагентовСтарые.ПорядокИдентификацииЮрЛиц;
			КонецЕсли;
				
			Если НастройиСинхронизацииКонтрагентовСтарые.Свойство(""Пресеты"") И НастройиСинхронизацииКонтрагентовНовые.Свойство(""Пресеты"") тогда
				
				Пресет = НастройиСинхронизацииКонтрагентовСтарые.Пресеты;
				
				Пресет.Колонки.Добавить(""ТипКонтрагента"");
				
				Для Каждого ТекПресет из Пресет Цикл
					ТекПресет.ТипКонтрагента = ТекПресет.ВидКонтрагента;
				КонецЦикла;
				
				НастройиСинхронизацииКонтрагентовНовые.Пресеты = Пресет;
				
			КонецЕсли;
			
		КонецЕсли;	

#КонецОбласти		

		
#Область Товары

		Если НастройкиОбмена.Свойство(""НастройкиСинхронизацииТоваров"") тогда
			
			НастройиСинхронизацииТоваровСтарые 	= НастройкиОбмена.НастройкиСинхронизацииТоваров;
			НастройиСинхронизацииТоваровНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииТоваров;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ЗагружатьТовары"") И НастройиСинхронизацииТоваровНовые.Свойство(""ЗагружатьТовары"") тогда
				НастройиСинхронизацииТоваровНовые.ЗагружатьТовары = НастройиСинхронизацииТоваровСтарые.ЗагружатьТовары;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьТовары"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьТовары"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьТовары = НастройиСинхронизацииТоваровСтарые.ВыгружатьТовары;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ОбновлятьТовары"") И НастройиСинхронизацииТоваровНовые.Свойство(""ОбновлятьТовары"") тогда
				НастройиСинхронизацииТоваровНовые.ОбновлятьТовары = НастройиСинхронизацииТоваровСтарые.ОбновлятьТовары;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ЗагружатьКартинкиИФайлы"") И НастройиСинхронизацииТоваровНовые.Свойство(""ЗагружатьКартинкиИФайлы"") тогда
				НастройиСинхронизацииТоваровНовые.ЗагружатьКартинкиИФайлы = НастройиСинхронизацииТоваровСтарые.ЗагружатьКартинкиИФайлы;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьКартинкиИФайлы"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьКартинкиИФайлы"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьКартинкиИФайлы = НастройиСинхронизацииТоваровСтарые.ВыгружатьКартинкиИФайлы;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьПланируемуюДатуПоступления"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьПланируемуюДатуПоступления"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьПланируемуюДатуПоступления = НастройиСинхронизацииТоваровСтарые.ВыгружатьПланируемуюДатуПоступления;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ВыгружатьШтрихкоды"") И НастройиСинхронизацииТоваровНовые.Свойство(""ВыгружатьШтрихкоды"") тогда
				НастройиСинхронизацииТоваровНовые.ВыгружатьШтрихкоды = НастройиСинхронизацииТоваровСтарые.ВыгружатьШтрихкоды;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""Склад"") И НастройиСинхронизацииТоваровНовые.Свойство(""Склад"") тогда
				НастройиСинхронизацииТоваровНовые.Склад = НастройиСинхронизацииТоваровСтарые.Склад;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""ТипЦены"") И НастройиСинхронизацииТоваровНовые.Свойство(""ТипЦены"") тогда
				НастройиСинхронизацииТоваровНовые.ТипЦены = НастройиСинхронизацииТоваровСтарые.ТипЦены;
			КонецЕсли;
			
			Если НастройиСинхронизацииТоваровСтарые.Свойство(""СтавкиНДС"") И НастройиСинхронизацииТоваровНовые.Свойство(""СтавкиНДС"") тогда
				НастройиСинхронизацииТоваровНовые.СтавкиНДС = НастройиСинхронизацииТоваровСтарые.СтавкиНДС;
			КонецЕсли;
			
			
			
			Если Метаданные.ОбщиеМодули.Найти(""Б24_ОбменСПорталомВызовСервера"") <> Неопределено тогда
				
				Если ЕстьПользовательскоеДеревоГрупп тогда
					
					НовоеДеревоГрупп = Справочники.Б24_ПользовательскиеГруппыТоваров.СоздатьЭлемент();
					НовоеДеревоГрупп.Товары.Загрузить(Справочники.Б24_ПользовательскиеГруппыТоваров.Б24_Инфоблок.Товары.Выгрузить());
					НовоеДеревоГрупп.Наименование = ""Дерево с предыдущей версии модуля"";
					НовоеДеревоГрупп.Записать();
										
					СоответствиеРодителей = Новый Соответствие;
					СоответствиеРодителей.Вставить(Справочники.Б24_ПользовательскиеГруппыТоваров.Б24_Инфоблок, НовоеДеревоГрупп.Ссылка);
					
					Выборка = Справочники.Б24_ПользовательскиеГруппыТоваров.ВыбратьИерархически(Справочники.Б24_ПользовательскиеГруппыТоваров.Б24_Инфоблок);
					
					Пока Выборка.Следующий() Цикл

						ПодчДеревоГрупп = Справочники.Б24_ПользовательскиеГруппыТоваров.СоздатьЭлемент();
						ПодчДеревоГрупп.Товары.Загрузить(Выборка.Товары.Выгрузить());
						ПодчДеревоГрупп.Наименование = Выборка.Наименование;
						
						ПодчДеревоГрупп.Родитель = СоответствиеРодителей[Выборка.Родитель];	
						
						ПодчДеревоГрупп.Записать();
						
						СоответствиеРодителей.Вставить(Выборка.Ссылка, ПодчДеревоГрупп.Ссылка);
						
					КонецЦикла;
					
					Если НастройиСинхронизацииТоваровНовые.Свойство(""ДеревоГрупп"") тогда
						НастройиСинхронизацииТоваровНовые.ДеревоГрупп = НовоеДеревоГрупп.Ссылка;	
					Иначе
						НастройиСинхронизацииТоваровНовые.Вставить(""ДеревоГрупп"", НовоеДеревоГрупп.Ссылка);	
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;	

#КонецОбласти		

		
#Область Сделки

		Если НастройкиОбмена.Свойство(""НастройкиСинхронизацииСделок"") тогда
			
			НастройиСинхронизацииСделокСтарые = НастройкиОбмена.НастройкиСинхронизацииСделок;
			НастройиСинхронизацииСделокНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииСделок;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ЗагружатьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ЗагружатьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ЗагружатьСделки = НастройиСинхронизацииСделокСтарые.ЗагружатьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ВыгружатьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ВыгружатьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ВыгружатьСделки = НастройиСинхронизацииСделокСтарые.ВыгружатьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ЗагружатьПользовательскиеПоляСделок"") И НастройиСинхронизацииСделокНовые.Свойство(""ЗагружатьПользовательскиеПоляСделок"") тогда
				НастройиСинхронизацииСделокНовые.ЗагружатьПользовательскиеПоляСделок = НастройиСинхронизацииСделокСтарые.ЗагружатьПользовательскиеПоляСделок;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ВыгружатьПользовательскиеПоляСделок"") И НастройиСинхронизацииСделокНовые.Свойство(""ВыгружатьПользовательскиеПоляСделок"") тогда
				НастройиСинхронизацииСделокНовые.ВыгружатьПользовательскиеПоляСделок = НастройиСинхронизацииСделокСтарые.ВыгружатьПользовательскиеПоляСделок;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ОбновлятьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ОбновлятьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ОбновлятьСделки = НастройиСинхронизацииСделокСтарые.ОбновлятьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""Организация"") И НастройиСинхронизацииСделокНовые.Свойство(""Организация"") тогда
				НастройиСинхронизацииСделокНовые.Организация = НастройиСинхронизацииСделокСтарые.Организация;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""Подразделение"") И НастройиСинхронизацииСделокНовые.Свойство(""Подразделение"") тогда
				НастройиСинхронизацииСделокНовые.Подразделение = НастройиСинхронизацииСделокСтарые.Подразделение;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""РежимЗаписиДокумента"") И НастройиСинхронизацииСделокНовые.Свойство(""РежимЗаписиДокумента"") тогда
				НастройиСинхронизацииСделокНовые.РежимЗаписиДокумента = НастройиСинхронизацииСделокСтарые.РежимЗаписиДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ИсточникДатыДокумента"") И НастройиСинхронизацииСделокНовые.Свойство(""ИсточникДатыДокумента"") тогда
				НастройиСинхронизацииСделокНовые.ИсточникДатыДокумента = НастройиСинхронизацииСделокСтарые.ИсточникДатыДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ИсточникНомераДокумента"") И НастройиСинхронизацииСделокНовые.Свойство(""ИсточникНомераДокумента"") тогда
				НастройиСинхронизацииСделокНовые.ИсточникНомераДокумента = НастройиСинхронизацииСделокСтарые.ИсточникНомераДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ДатаНачалаВыгрузкиСделок"") И НастройиСинхронизацииСделокНовые.Свойство(""ДатаНачалаВыгрузкиСделок"") тогда
				НастройиСинхронизацииСделокНовые.ДатаНачалаВыгрузкиСделок = НастройиСинхронизацииСделокСтарые.ДатаНачалаВыгрузкиСделок;
				НастройиСинхронизацииСделокНовые.ДатаНачалаЗагрузкиСделок = НастройиСинхронизацииСделокСтарые.ДатаНачалаВыгрузкиСделок;
				
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ВыгружатьСделки"") И НастройиСинхронизацииСделокНовые.Свойство(""ВыгружатьСделки"") тогда
				НастройиСинхронизацииСделокНовые.ВыгружатьСделки = НастройиСинхронизацииСделокСтарые.ВыгружатьСделки;
			КонецЕсли;
			
			Если НастройиСинхронизацииСделокСтарые.Свойство(""ИнформацияОСтатусах"") тогда
				
				ИнформацияОСтатусах = НастройиСинхронизацииСделокСтарые.ИнформацияОСтатусах;				
				
				Если ТипЗнч(ИнформацияОСтатусах) = Тип(""Структура"") тогда
					
					ВидЗаказа = Неопределено;
					НастройиСинхронизацииСделокСтарые.Свойство(""ВидЗаказа"", ВидЗаказа);
					
					НаправленияСделок = Новый ТаблицаЗначений;
					НаправленияСделок.Колонки.Добавить(""ИдНаправления"");
					НаправленияСделок.Колонки.Добавить(""Направление"");
					НаправленияСделок.Колонки.Добавить(""ВидЗаказа"");
					
					Если ИнформацияОСтатусах.Свойство(""СтатусыНаправленийЗначенийСвойств"") тогда
						
						ИнформацияОСтатусах.СтатусыНаправленийЗначенийСвойств.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
						ИнформацияОСтатусах.СтатусыНаправленийЗначенийСвойств.Колонки.Добавить(""ВидЗаказа"");
						
						Для Каждого ТекНаправления из ИнформацияОСтатусах.СтатусыНаправленийЗначенийСвойств Цикл
							Если НаправленияСделок.Найти(ТекНаправления.ИдНаправления, ""ИдНаправления"") = Неопределено тогда
								НовоеНаправление = НаправленияСделок.Добавить();
								НовоеНаправление.ИдНаправления 	= ТекНаправления.ИдНаправления;
								НовоеНаправление.Направление 	= ТекНаправления.НазваниеНаправления;
								НовоеНаправление.ВидЗаказа 		= ВидЗаказа;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
					Если ИнформацияОСтатусах.Свойство(""СтатусыНаправленийСостояний"") тогда
						
						ИнформацияОСтатусах.СтатусыНаправленийСостояний.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);
						ИнформацияОСтатусах.СтатусыНаправленийСостояний.Колонки.Добавить(""ВидЗаказа"");
						
						Для Каждого ТекНаправления из ИнформацияОСтатусах.СтатусыНаправленийСостояний Цикл
							Если НаправленияСделок.Найти(ТекНаправления.ИдНаправления, ""ИдНаправления"") = Неопределено тогда
								НовоеНаправление = НаправленияСделок.Добавить();
								НовоеНаправление.ИдНаправления 	= ТекНаправления.ИдНаправления;
								НовоеНаправление.Направление 	= ТекНаправления.НазваниеНаправления;
								НовоеНаправление.ВидЗаказа 		= ВидЗаказа;
							КонецЕсли;
						КонецЦикла;
						
						
					КонецЕсли;
					
					Если ИнформацияОСтатусах.Свойство(""СтатусыНаправленийСтатусов"") тогда
						
						ИнформацияОСтатусах.СтатусыНаправленийСтатусов.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
						ИнформацияОСтатусах.СтатусыНаправленийСтатусов.Колонки.Добавить(""ВидЗаказа"");	
						
						Для Каждого ТекНаправления из ИнформацияОСтатусах.СтатусыНаправленийСтатусов Цикл
							Если НаправленияСделок.Найти(ТекНаправления.ИдНаправления, ""ИдНаправления"") = Неопределено тогда
								НовоеНаправление = НаправленияСделок.Добавить();
								НовоеНаправление.ИдНаправления 	= ТекНаправления.ИдНаправления;
								НовоеНаправление.Направление 	= ТекНаправления.НазваниеНаправления;
								НовоеНаправление.ВидЗаказа 		= ВидЗаказа;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
					ИнформацияОСтатусах.Вставить(""НаправленияСделок"", НаправленияСделок);
					
					Если ИнформацияОСтатусах.Свойство(""НаправленияСделок"") тогда
						ИнформацияОСтатусах.НаправленияСделок = НаправленияСделок;
					Иначе
						ИнформацияОСтатусах.Вставить(""НаправленияСделок"", НаправленияСделок);
					КонецЕсли;
					
				КонецЕсли;
				
				НастройиСинхронизацииСделокНовые.Вставить(""ИнформацияОСтатусах"", ИнформацияОСтатусах);	
				
			КонецЕсли;
			
		КонецЕсли;	

#КонецОбласти		

		
#Область Счета

		Если НастройкиОбмена.Свойство(""НастройкиСинхронизацииСчетов"") тогда
			
			НастройиСинхронизацииСчетовСтарые = НастройкиОбмена.НастройкиСинхронизацииСчетов;
			НастройиСинхронизацииСчетовНовые	= НастройкиСинхронизацииПоУмолчанию.НастройкиСинхронизацииСчетов;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ВыгружатьПользовательскиеПоляСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ВыгружатьПользовательскиеПоляСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ВыгружатьПользовательскиеПоляСчетов = НастройиСинхронизацииСчетовСтарые.ВыгружатьПользовательскиеПоляСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ЗагружатьПользовательскиеПоляСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ЗагружатьПользовательскиеПоляСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ЗагружатьПользовательскиеПоляСчетов = НастройиСинхронизацииСчетовСтарые.ЗагружатьПользовательскиеПоляСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ВыгружатьСчета"") И НастройиСинхронизацииСчетовНовые.Свойство(""ВыгружатьСчета"") тогда
				НастройиСинхронизацииСчетовНовые.ВыгружатьСчета = НастройиСинхронизацииСчетовСтарые.ВыгружатьСчета;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ЗагружатьСчета"") И НастройиСинхронизацииСчетовНовые.Свойство(""ЗагружатьСчета"") тогда
				НастройиСинхронизацииСчетовНовые.ЗагружатьСчета = НастройиСинхронизацииСчетовСтарые.ЗагружатьСчета;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ДатаНачалаВыгрузкиСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ДатаНачалаВыгрузкиСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ДатаНачалаВыгрузкиСчетов = НастройиСинхронизацииСчетовСтарые.ДатаНачалаВыгрузкиСчетов;
				НастройиСинхронизацииСчетовНовые.ДатаНачалаЗагрузкиСчетов = НастройиСинхронизацииСчетовСтарые.ДатаНачалаВыгрузкиСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ОбновлятьСчета"") И НастройиСинхронизацииСчетовНовые.Свойство(""ОбновлятьСчета"") тогда
				НастройиСинхронизацииСчетовНовые.ОбновлятьСчета = НастройиСинхронизацииСчетовСтарые.ОбновлятьСчета;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""РежимЗаписиДокумента"") И НастройиСинхронизацииСчетовНовые.Свойство(""РежимЗаписиДокумента"") тогда
				НастройиСинхронизацииСчетовНовые.РежимЗаписиДокумента = НастройиСинхронизацииСчетовСтарые.РежимЗаписиДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ИсточникДатыДокумента"") И НастройиСинхронизацииСчетовНовые.Свойство(""ИсточникДатыДокумента"") тогда
				НастройиСинхронизацииСчетовНовые.ИсточникДатыДокумента = НастройиСинхронизацииСчетовСтарые.ИсточникДатыДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ИсточникНомераДокумента"") И НастройиСинхронизацииСчетовНовые.Свойство(""ИсточникНомераДокумента"") тогда
				НастройиСинхронизацииСчетовНовые.ИсточникНомераДокумента = НастройиСинхронизацииСчетовСтарые.ИсточникНомераДокумента;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ПечатныеФормыСчетов"") И НастройиСинхронизацииСчетовНовые.Свойство(""ПечатныеФормыСчетов"") тогда
				НастройиСинхронизацииСчетовНовые.ПечатныеФормыСчетов = НастройиСинхронизацииСчетовСтарые.ПечатныеФормыСчетов;
			КонецЕсли;
			
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""Подразделение"") И НастройиСинхронизацииСчетовНовые.Свойство(""Подразделение"") тогда
				НастройиСинхронизацииСчетовНовые.Подразделение = НастройиСинхронизацииСчетовСтарые.Подразделение;
			КонецЕсли;
	
			Если НастройиСинхронизацииСчетовСтарые.Свойство(""ИнформацияОСтатусах"") тогда
				
				ИнформацияОСтатусах = НастройиСинхронизацииСчетовСтарые.ИнформацияОСтатусах;				
				
				Если ТипЗнч(ИнформацияОСтатусах) = Тип(""Структура"") тогда
					
					Если ИнформацияОСтатусах.Свойство(""СоответствияЗначенийСвойств"") тогда
						ИнформацияОСтатусах.СоответствияЗначенийСвойств.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
					КонецЕсли;
					
					Если ИнформацияОСтатусах.Свойство(""СоответствияСтатусов"") тогда
						ИнформацияОСтатусах.СоответствияСтатусов.Колонки.Добавить(""НеЗагружать"", ОписаниеТиповБулево);	
					КонецЕсли;
					
				КонецЕсли;
				
				НастройиСинхронизацииСчетовНовые.Вставить(""ИнформацияОСтатусах"", ИнформацияОСтатусах);	
				
			КонецЕсли;
	
		КонецЕсли;	

#КонецОбласти		

	КонецЕсли;
	
	НоваяНастройка.НастройкиСинхронизации = Новый ХранилищеЗначения(НастройкиСинхронизацииПоУмолчанию);
	
	НоваяНастройка.Записать();	
	
	НастройкаСинхронизации = НоваяНастройка.Ссылка;
	// БВ
	Сообщить(Нстр(""ru = 'Начало переноса идентификаторов'; uk = 'Початок перенесення ідентифікаторів'""));
	//
	
	Токен = РегистрыСведений.Б24_ТокеныОбмена.ПолучитьПоследнее();
	
	НоваяЗапись 						= РегистрыСведений.Б24_ТокеныОбмена.СоздатьМенеджерЗаписи();
	НоваяЗапись.НастройкаСинхронизации 	= НастройкаСинхронизации;
	НоваяЗапись.Период					= ТекущаяДата();
	НоваяЗапись.Токен					= Токен.Токен;
	НоваяЗапись.Записать();	
	
	
	ОбщиеНастройки = Неопределено;
	Если Метаданные.ОбщиеМодули.Найти(""Б24_СинхронизацияКлиентСервер"") <> Неопределено тогда
		Выполнить(""ОбщиеНастройки =  Б24_СинхронизацияКлиентСервер.СформироватьБазовуюСтруктуруНастроек(НастройкаСинхронизации);"");
	КонецЕсли;
	
	Если ОбщиеНастройки = Неопределено тогда
		// БВ
		Сообщить(Нстр(""ru = 'Не удалось подключиться к Битрикс24'; uk = 'Не вдалось підключитися до Бітрікс24'""));
		ТекстСообщения = Нстр(""ru = 'Не удалось перенести идентификаторы объектов. Скорее всего в старом модуле некорректный токен.'"" + 
							 "";uk = 'Не вдалось перенести ідентифікатори об'єктів. Скоріш за все в старому модулі некоректний токен.'"");
		Сообщить(ТекстСообщения);
		//
		
		Возврат;
	КонецЕсли;
	Портал = ОбщиеНастройки.НастройкиПодключения.Сервер;
	
	НоваяНастройка.Портал = Портал;
	НоваяНастройка.Записать();
	
	Выборка = РегистрыСведений.Б24_ИдентификаторыОбъектов.Выбрать();
	
	
	Пока Выборка.Следующий() Цикл
		
		НоваяЗапись = РегистрыСведений.Б24_ИдентификаторыОбъектов.СоздатьМенеджерЗаписи();
		
		НоваяЗапись.Портал 						= Портал; 		
		НоваяЗапись.Объект 						= Выборка.Объект;
		НоваяЗапись.Идентификатор 				= Выборка.Идентификатор;
		НоваяЗапись.ДополнительныйИдентификатор = Выборка.ДополнительныйИдентификатор;
		
		Если Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Товар тогда
			
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Товар;
			
			Попытка
				Если ЗначениеЗаполнено(Выборка.ПодчиненныйОбъект) тогда
					НоваяЗапись.ПодчиненныйОбъект 	= Выборка.ПодчиненныйОбъект;
				Иначе
					НоваяЗапись.ПодчиненныйОбъект 	= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.КартинкаФайлТовара тогда
			
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.КартинкаФайлТовара;
				
			Попытка
				Если ЗначениеЗаполнено(Выборка.ПодчиненныйОбъект) тогда
					НоваяЗапись.ПодчиненныйОбъект 	= Выборка.ПодчиненныйОбъект;
				Иначе
					НоваяЗапись.ПодчиненныйОбъект 	= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоТовара тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоТовара;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ГруппаТовара тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ГруппаТовара;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Счет тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Счет;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.РеквизитыСчета тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.РеквизитыСчета;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Компания тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Компания;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Контакт тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Контакт;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Реквизит тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Реквизит;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЮрАдресРеквизита тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЮрАдресРеквизита;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ФактАдресРеквизита тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ФактАдресРеквизита;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.БанковскийСчетРеквизита тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.БанковскийСчетРеквизита;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЕдиницаИзмерения тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЕдиницаИзмерения;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваТовара тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваТовара;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.Сделка тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.Сделка;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.РеквизитыСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.РеквизитыСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ТоварыСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ТоварыСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоСчета тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоСчета;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоКомпании тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоКомпании;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.СвойствоКонтакта тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.СвойствоКонтакта;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваКомпании тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваКомпании;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваКонтакта тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваКонтакта;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваСделки тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваСделки;
		ИначеЕсли Выборка.ТипДанных = ТипыДанныхДляОбменаСПорталомСтарые.ЗначениеСвойстваСчета тогда
			НоваяЗапись.ТипДанных  = ТипыДанныхДляОбменаСПорталомНовые.ЗначениеСвойстваСчета;
		КонецЕсли;		
		
		НоваяЗапись.Записать();	
		
	КонецЦикла;
	
	// БВ
	Сообщить(Нстр(""ru = 'Перенос идентификаторов завершен'; uk = 'Перенесення ідентифікаторів завершено'""));
	//
	
	НаименованиеОбъекта = ""Выполнение синхронизации с Битрикс24 по расписанию"";
	Публикация 			= Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(""Наименование"", НаименованиеОбъекта);
	Запрос.УстановитьПараметр(""Публикация""	, Публикация);
	Запрос.Текст = ""ВЫБРАТЬ
	|	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
	|ГДЕ
	|	ДополнительныеОтчетыИОбработки.Наименование = &Наименование
	|	И ДополнительныеОтчетыИОбработки.Публикация = &Публикация
	|	И ДополнительныеОтчетыИОбработки.ПометкаУдаления = ЛОЖЬ"";
	
	ВыполненныйЗапрос = Запрос.Выполнить();
	
	ЗаписьСОбработкой = Неопределено;
	
	Если НЕ ВыполненныйЗапрос.Пустой() тогда
		ТзнДанных = ВыполненныйЗапрос.Выгрузить();
		ЗаписьСОбработкой = ТзнДанных[0].Ссылка;
		
		ТекОбработка = ЗаписьСОбработкой.ПолучитьОбъект();
		ТекОбработка.УстановитьПометкуУдаления(Истина);
		ТекОбработка.Записать();
		
	КонецЕсли;
	
	Попытка
		НастройкиОбмена 	= Константы.Б24_НастройкиОбмена.Получить().Получить();
		НастройкиОбмена.СпособСинхронизацииДанных 	= ""Только ручной режим""; 
		НастройкиОбмена.СинхронизацияКонтрагентов 	= Ложь; 
		НастройкиОбмена.СинхронизацияТоваров 		= Ложь; 
		НастройкиОбмена.СинхронизацияСчетов 		= Ложь; 
		НастройкиОбмена.СинхронизацияСделок 		= Ложь; 
		
		Константы.Б24_НастройкиОбмена.Установить(новый ХранилищеЗначения(НастройкиОбмена));
	Исключение
	КонецПопытки;

	ОбновитьПовторноИспользуемыеЗначения();
	// БВ
	Сообщить(Нстр(""ru = 'Перенос данных завершен.'; uk = 'перенесення даних завершено.'""));	
	//
КонецПроцедуры


#КонецОбласти





",
{4,5,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",926fb8cd-03ca-4db8-bc65-81e2ea6c2704}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"СлужебныеДанные",
{1,2,
{"ru","Служебные данные"},
{"uk","Службові дані"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{15},0,"УставливаемыеМодули",
{1,2,
{"ru","Уставливаемые модули"},
{"uk","Встановлені модулі"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,7,
{5,1,0,"ВерсияМодуля",
{1,2,
{"ru","Версия модуля"},
{"uk","Версія модуля"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Ссылка",
{1,2,
{"ru","Ссылка"},
{"uk","Посилання"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ДатаВыхода",
{1,2,
{"ru","Дата выхода"},
{"uk","Дата виходу"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"КритическаяИнформация",
{1,2,
{"ru","Критическая информация"},
{"uk","Критична інформація"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ИсторияИзменений",
{1,2,
{"ru","История изменений"},
{"uk","Історія змін"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"РелизКонфигурации",
{1,2,
{"ru","Релиз конфигурации"},
{"uk","Реліз конфігурації"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"МинимальныйРелиз",
{1,2,
{"ru","Минимальный релиз"},
{"uk","Мінімальний реліз"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{18},0,"ДанныеОМодуле",
{1,2,
{"ru","Данные о модуле"},
{"uk","Дані про модуль"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{19},0,"РасширениеУстановлено",
{1,2,
{"ru","Расширение установлено"},
{"uk","Розширення встановлено"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,3,
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УстановитьМодуль",
{1,2,
{"ru","Установить модуль"},
{"uk","Встановити модуль"}
},
{1,1,
{"ru","Установить модуль"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УстановитьМодуль",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КомандаДобавитьПожелание",
{1,2,
{"ru","Команда добавить пожелание"},
{"uk","Команда додати побажання"}
},
{1,1,
{"ru","Команда добавить пожелание"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,97b2cc97-d5c6-45fb-9824-9d6d73db21fe},"",-1,-1,1,0,""},"КомандаДобавитьПожелание",2,0,0,
{0,0},1,0,1,0,0,2},
{9,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПереносДанных",
{1,2,
{"ru","Перенести данные с версии модуля 1.x в версию 2.х.х.х"},
{"uk","Перенести данні з версії модуля 1.х у версію 2.х.х.х"}
},
{1,1,
{"ru","Перенос данных"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПереносДанных",3,0,0,
{0,0},1,0,1,0,0,2}
},
{0,0},
{0,0},0,0}