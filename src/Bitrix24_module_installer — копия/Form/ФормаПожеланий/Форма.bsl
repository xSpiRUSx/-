

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Емейл = "Укажите адрес электронной почты"; 
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПожелание(Команда)
	
	Если НЕ ЗначениеЗаполнено(Емейл) тогда
		ПоказатьПредупреждение(,Нстр("ru = 'Не указан адрес электронной почты'; uk = 'Не вказана адреса електронної пошти'"));
		Возврат;
	КонецЕсли;
	
	Результат = ОтправитьПожеланиеСервер();
	
	Оповещение = Новый ОписаниеОповещения("ПослеОтправки", ЭтаФорма, Параметры);
	
	Если Результат = Истина тогда
		ПоказатьПредупреждение(Оповещение, Нстр("ru = 'Ваше пожелание отправлено'; uk = 'Ваше побажання відправлене'"));
	Иначе
		ПоказатьПредупреждение(, Нстр("ru = 'Не удалось отправить пожелание'; uk = 'Не вдалося відправити побажання'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтправки(Параметры) Экспорт
	Закрыть();	
КонецПроцедуры

&НаСервере
Функция ОтправитьПожеланиеСервер()
	
	Результат = Истина;
	
	НастройкиПодключения = Новый Структура;
	РазобратьАдресСайта("https://util.1c-bitrix.ru/onec/add_wish.php", НастройкиПодключения);	
	
	Соединение = УстановитьСоединениеССервером(НастройкиПодключения);
	
	ПустойПараметр = "&LastParam=last";    //1С может резать символы, поэтому добавляем параметр, который можно спокойно резать.
	
	HTTPЗапрос = Новый HTTPЗапрос;
	HTTPЗапрос.АдресРесурса = "onec/add_wish.php";
								
	ТелоHTTPЗапроса = "email="+ЗакодироватьСтрокуСервер(Емейл)+"&text="+ЗакодироватьСтрокуСервер(Пожелание)
	+"&module=1C_Syn&app_code="+ЗакодироватьСтрокуСервер(Метаданные.Имя)+"&app="
	+ЗакодироватьСтрокуСервер(Метаданные.Синоним) +"&app_version="+ЗакодироватьСтрокуСервер(Метаданные.Версия);
	
	HTTPЗапрос.Заголовки.Вставить("Content-Type"	,"application/x-www-form-urlencoded; charset=utf-8");
	HTTPЗапрос.Заголовки.Вставить("Content-Length"	, Формат(СтрДлина(ТелоHTTPЗапроса), "ЧГ=0"));
	
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоHTTPЗапроса);
	
	Попытка   
		
		Ответ 				= Соединение.ОтправитьДляОбработки(HTTPЗапрос);	
		ОтветСтрокой 		= Ответ.ПолучитьТелоКакСтроку();
		
	Исключение
		Сообщить(ИнформацияОбОшибке().Описание);
		Результат = Ложь;

	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции


#Область Служебные

&НаСервере
Функция РазобратьАдресСайта(Знач АдресСайта, НастройкиПодключения) 
	
	АдресСайта = СокрЛП(АдресСайта); 
	
	Сервер		 		 = ""; 
	Порт				 = 0;
	АдресСкрипта 		 = "";
	ЗащищенноеСоединение = Ложь;
	
	Если НЕ ПустаяСтрока(АдресСайта) Тогда
		
		АдресСайта = СтрЗаменить(АдресСайта, "\", "/");
		АдресСайта = СтрЗаменить(АдресСайта, " ", "");
		
		Если НРег(Лев(АдресСайта, 7)) = "http://" Тогда
			
			АдресСайта = Сред(АдресСайта, 8);
			
		ИначеЕсли НРег(Лев(АдресСайта, 8)) = "https://" Тогда
			
			АдресСайта = Сред(АдресСайта, 9);
			ЗащищенноеСоединение = Истина;
			
		КонецЕсли;
		
		ПозицияСлэша = Найти(АдресСайта, "/");
		
		Если ПозицияСлэша > 0 Тогда
			
			Сервер 		 = Лев(АдресСайта, ПозицияСлэша - 1);	
			АдресСкрипта = Прав(АдресСайта, СтрДлина(АдресСайта) - ПозицияСлэша);
			
		Иначе
			
			Сервер 		 = АдресСайта;
			АдресСкрипта = "";
			
		КонецЕсли;
		
		ПозицияДвоеточия = Найти(Сервер, ":");
		ПортСтрока = "0";
		
		Если ПозицияДвоеточия > 0 Тогда
			
			СерверСПортом = Сервер;
			Сервер		  = Лев(СерверСПортом, ПозицияДвоеточия - 1);
			ПортСтрока 	  = Прав(СерверСПортом, СтрДлина(СерверСПортом) - ПозицияДвоеточия);
			
		КонецЕсли;
		
		Попытка
			
			Порт = Число(ПортСтрока);
			
		Исключение
			
			#ЕСЛИ НЕ СЕРВЕР ТОГДА
				// БВ
				ПоказатьОповещениеПользователя(НСтр("ru = 'Не удалось получить номер порта ('; uk = 'Не вдалося отримати номер порту ('") + ПортСтрока + ")!"
				+ Символы.ПС + НСтр("ru = 'Проверьте правильность ввода адреса сайта.'; uk = 'Перевірте правильність введення адреси сайту.'"));
				//
			#ИНАЧЕ
				// БВ
				Сообщить(НСтр("ru = 'Не удалось получить номер порта ('; uk = 'Не вдалося отримати номер порту ('") + ПортСтрока + ")!"
				+ Символы.ПС + НСтр("ru = 'Проверьте правильность ввода адреса сайта.'; uk = 'Перевірте правильність введення адреси сайту.'"));
				//
			#КОНЕЦЕСЛИ
			
			Возврат Ложь;
			
		КонецПопытки;
		
		Если Порт = 0 Тогда
			
			Порт = ?(ЗащищенноеСоединение, 443, 80);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НастройкиПодключения.Вставить("Сервер"	  				, Сервер); 
	НастройкиПодключения.Вставить("Порт"		   			, Порт);
	НастройкиПодключения.Вставить("АдресСкрипта"			, АдресСкрипта);
	НастройкиПодключения.Вставить("ЗащищенноеСоединение"	, ЗащищенноеСоединение);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция УстановитьСоединениеССервером(ОбщиеНастройки)    
	
	Соединение = Неопределено;
	
	Попытка
		
		ssl = Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Неопределено);   
		
		ИнтернетПрокси = ПолучениеФайловИзИнтернетаКлиентСервер.ПолучитьПрокси("HTTP");
		
		Соединение = Новый HTTPСоединение(ОбщиеНастройки.Сервер, ОбщиеНастройки.Порт,,, ИнтернетПрокси, ,ssl);
		
	Исключение
		
		// БВ
		лТекстОшибки = НСтр("ru = 'Не удалось установить соединение с серовером'; uk = 'Не вдалося встановити зв'язок з сервером'") 
		+ ОбщиеНастройки.Сервер + ":" + Строка(ОбщиеНастройки.Порт) 
		+ НСтр("ru = '.Проверьте правильность токена.'; uk = '.Перевірте правильність токену.'");
		//
		Сообщить( лТекстОшибки);
		
		Соединение = Неопределено;
		
	КонецПопытки;
	
	Возврат Соединение;
	
КонецФункции

&НаСервере
Функция ЗакодироватьСтрокуСервер(ЗначениеСтроки) Экспорт
	
	Возврат КодироватьСтроку(XMLСтрока(ЗначениеСтроки), СпособКодированияСтроки.КодировкаURL, "UTF8");
	
КонецФункции


#КонецОбласти

